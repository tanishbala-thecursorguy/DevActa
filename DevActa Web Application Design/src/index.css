@import url("https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap");
/*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */
@layer properties {
  @supports (((-webkit-hyphens: none)) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color: rgb(from red r g b)))) {
    *, :before, :after, ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
      --tw-rotate-x: rotateX(0);
      --tw-rotate-y: rotateY(0);
      --tw-rotate-z: rotateZ(0);
      --tw-skew-x: skewX(0);
      --tw-skew-y: skewY(0);
      --tw-space-y-reverse: 0;
      --tw-space-x-reverse: 0;
      --tw-border-style: solid;
      --tw-gradient-position: initial;
      --tw-gradient-from: #0000;
      --tw-gradient-via: #0000;
      --tw-gradient-to: #0000;
      --tw-gradient-stops: initial;
      --tw-gradient-via-stops: initial;
      --tw-gradient-from-position: 0%;
      --tw-gradient-via-position: 50%;
      --tw-gradient-to-position: 100%;
      --tw-leading: initial;
      --tw-font-weight: initial;
      --tw-tracking: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-outline-style: solid;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-backdrop-blur: initial;
      --tw-backdrop-brightness: initial;
      --tw-backdrop-contrast: initial;
      --tw-backdrop-grayscale: initial;
      --tw-backdrop-hue-rotate: initial;
      --tw-backdrop-invert: initial;
      --tw-backdrop-opacity: initial;
      --tw-backdrop-saturate: initial;
      --tw-backdrop-sepia: initial;
      --tw-duration: initial;
    }
  }
}

@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
    --color-red-50: oklch(.971 .013 17.38);
    --color-red-400: oklch(.704 .191 22.216);
    --color-red-500: oklch(.637 .237 25.331);
    --color-red-600: oklch(.577 .245 27.325);
    --color-orange-100: oklch(.954 .038 75.164);
    --color-orange-500: oklch(.705 .213 47.604);
    --color-orange-900: oklch(.408 .123 38.172);
    --color-amber-100: oklch(.962 .059 95.617);
    --color-amber-200: oklch(.924 .12 95.746);
    --color-amber-300: oklch(.879 .169 91.605);
    --color-amber-500: oklch(.769 .188 70.08);
    --color-amber-600: oklch(.666 .179 58.318);
    --color-amber-700: oklch(.555 .163 48.998);
    --color-amber-800: oklch(.473 .137 46.201);
    --color-amber-900: oklch(.414 .112 45.904);
    --color-yellow-200: oklch(.945 .129 101.54);
    --color-yellow-300: oklch(.905 .182 98.111);
    --color-yellow-400: oklch(.852 .199 91.936);
    --color-yellow-500: oklch(.795 .184 86.047);
    --color-yellow-600: oklch(.681 .162 75.834);
    --color-yellow-800: oklch(.476 .114 61.907);
    --color-yellow-900: oklch(.421 .095 57.708);
    --color-green-100: oklch(.962 .044 156.743);
    --color-green-300: oklch(.871 .15 154.449);
    --color-green-400: oklch(.792 .209 151.711);
    --color-green-500: oklch(.723 .219 149.579);
    --color-green-600: oklch(.627 .194 149.214);
    --color-green-800: oklch(.448 .119 151.328);
    --color-green-900: oklch(.393 .095 152.535);
    --color-cyan-400: oklch(.789 .154 211.53);
    --color-cyan-500: oklch(.715 .143 215.221);
    --color-cyan-900: oklch(.398 .07 227.392);
    --color-blue-50: oklch(.97 .014 254.604);
    --color-blue-100: oklch(.932 .032 255.585);
    --color-blue-400: oklch(.707 .165 254.624);
    --color-blue-500: oklch(.623 .214 259.815);
    --color-blue-800: oklch(.424 .199 265.638);
    --color-blue-900: oklch(.379 .146 265.522);
    --color-purple-100: oklch(.946 .033 307.174);
    --color-purple-300: oklch(.827 .119 306.383);
    --color-purple-400: oklch(.714 .203 305.504);
    --color-purple-500: oklch(.627 .265 303.9);
    --color-purple-900: oklch(.381 .176 304.987);
    --color-pink-100: oklch(.948 .028 342.258);
    --color-pink-400: oklch(.718 .202 349.761);
    --color-pink-900: oklch(.408 .153 2.432);
    --color-slate-50: oklch(.984 .003 247.858);
    --color-gray-100: oklch(.967 .003 264.542);
    --color-gray-200: oklch(.928 .006 264.531);
    --color-gray-300: oklch(.872 .01 258.338);
    --color-gray-400: oklch(.707 .022 261.325);
    --color-gray-500: oklch(.551 .027 264.364);
    --color-gray-600: oklch(.446 .03 256.802);
    --color-gray-700: oklch(.373 .034 259.733);
    --color-gray-800: oklch(.278 .033 256.848);
    --color-gray-900: oklch(.21 .034 264.665);
    --color-black: #000;
    --color-white: #fff;
    --spacing: .25rem;
    --container-sm: 24rem;
    --container-md: 28rem;
    --container-lg: 32rem;
    --container-2xl: 42rem;
    --container-4xl: 56rem;
    --container-6xl: 72rem;
    --container-7xl: 80rem;
    --text-xs: .75rem;
    --text-xs--line-height: calc(1 / .75);
    --text-sm: .875rem;
    --text-sm--line-height: calc(1.25 / .875);
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --text-5xl: 3rem;
    --text-5xl--line-height: 1;
    --text-6xl: 3.75rem;
    --text-6xl--line-height: 1;
    --text-7xl: 4.5rem;
    --text-7xl--line-height: 1;
    --text-9xl: 8rem;
    --text-9xl--line-height: 1;
    --font-weight-normal: 400;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --tracking-wider: .05em;
    --tracking-widest: .1em;
    --leading-relaxed: 1.625;
    --radius-xs: .125rem;
    --radius-2xl: 1rem;
    --radius-3xl: 1.5rem;
    --animate-pulse: pulse 2s cubic-bezier(.4, 0, .6, 1) infinite;
    --animate-bounce: bounce 1s infinite;
    --blur-sm: 8px;
    --blur-md: 12px;
    --blur-lg: 16px;
    --default-transition-duration: .15s;
    --default-transition-timing-function: cubic-bezier(.4, 0, .2, 1);
    --default-font-family: var(--font-sans);
    --default-font-feature-settings: var(--font-sans--font-feature-settings);
    --default-font-variation-settings: var(--font-sans--font-variation-settings);
    --default-mono-font-family: var(--font-mono);
    --default-mono-font-feature-settings: var(--font-mono--font-feature-settings);
    --default-mono-font-variation-settings: var(--font-mono--font-variation-settings);
  }
}

@layer base {
  *, :after, :before, ::backdrop {
    box-sizing: border-box;
    border: 0 solid;
    margin: 0;
    padding: 0;
  }

  ::file-selector-button {
    box-sizing: border-box;
    border: 0 solid;
    margin: 0;
    padding: 0;
  }

  html, :host {
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    line-height: 1.5;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }

  body {
    line-height: inherit;
  }

  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }

  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }

  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }

  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }

  b, strong {
    font-weight: bolder;
  }

  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }

  small {
    font-size: 80%;
  }

  sub, sup {
    vertical-align: baseline;
    font-size: 75%;
    line-height: 0;
    position: relative;
  }

  sub {
    bottom: -.25em;
  }

  sup {
    top: -.5em;
  }

  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }

  :-moz-focusring {
    outline: auto;
  }

  progress {
    vertical-align: baseline;
  }

  summary {
    display: list-item;
  }

  ol, ul, menu {
    list-style: none;
  }

  img, svg, video, canvas, audio, iframe, embed, object {
    vertical-align: middle;
    display: block;
  }

  img, video {
    max-width: 100%;
    height: auto;
  }

  button, input, select, optgroup, textarea {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    opacity: 1;
    background-color: #0000;
    border-radius: 0;
  }

  ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    opacity: 1;
    background-color: #0000;
    border-radius: 0;
  }

  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }

  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }

  ::file-selector-button {
    margin-inline-end: 4px;
  }

  ::placeholder {
    opacity: 1;
    color: currentColor;
  }

  @supports (color: color-mix(in lab, red, red)) {
    ::placeholder {
      color: color-mix(in oklab, currentColor 50%, transparent);
    }
  }

  textarea {
    resize: vertical;
  }

  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }

  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }

  ::-webkit-datetime-edit {
    display: inline-flex;
  }

  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }

  ::-webkit-datetime-edit {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-year-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-month-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-day-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-hour-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-minute-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-second-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-millisecond-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }

  :-moz-ui-invalid {
    box-shadow: none;
  }

  button, input:where([type="button"], [type="reset"], [type="submit"]) {
    appearance: button;
  }

  ::file-selector-button {
    appearance: button;
  }

  ::-webkit-inner-spin-button {
    height: auto;
  }

  ::-webkit-outer-spin-button {
    height: auto;
  }

  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }

  * {
    border-color: var(--border);
    outline-color: var(--ring);
  }

  @supports (color: color-mix(in lab, red, red)) {
    * {
      outline-color: color-mix(in oklab, var(--ring) 50%, transparent);
    }
  }

  * {
    border-color: var(--border);
    outline-color: var(--ring);
  }

  @supports (color: color-mix(in lab, red, red)) {
    * {
      outline-color: color-mix(in oklab, var(--ring) 50%, transparent);
    }
  }

  body {
    background-color: var(--background);
    color: var(--foreground);
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) h1 {
    font-size: var(--text-2xl);
    font-weight: var(--font-weight-medium);
    line-height: 1.5;
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) h2 {
    font-size: var(--text-xl);
    font-weight: var(--font-weight-medium);
    line-height: 1.5;
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) h3 {
    font-size: var(--text-lg);
    font-weight: var(--font-weight-medium);
    line-height: 1.5;
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) h4 {
    font-size: var(--text-base);
    font-weight: var(--font-weight-medium);
    line-height: 1.5;
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) p {
    font-size: var(--text-base);
    font-weight: var(--font-weight-normal);
    line-height: 1.5;
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) label, :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) button {
    font-size: var(--text-base);
    font-weight: var(--font-weight-medium);
    line-height: 1.5;
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) input {
    font-size: var(--text-base);
    font-weight: var(--font-weight-normal);
    line-height: 1.5;
  }
}

@layer utilities {
  .\@container\/card-header {
    container: card-header / inline-size;
  }

  .pointer-events-none {
    pointer-events: none;
  }

  .visible {
    visibility: visible;
  }

  .sr-only {
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
    width: 1px;
    height: 1px;
    margin: -1px;
    padding: 0;
    position: absolute;
    overflow: hidden;
  }

  .absolute {
    position: absolute;
  }

  .fixed {
    position: fixed;
  }

  .relative {
    position: relative;
  }

  .sticky {
    position: sticky;
  }

  .inset-0 {
    inset: calc(var(--spacing) * 0);
  }

  .-top-2 {
    top: calc(var(--spacing) * -2);
  }

  .-top-8 {
    top: calc(var(--spacing) * -8);
  }

  .top-0 {
    top: calc(var(--spacing) * 0);
  }

  .top-2 {
    top: calc(var(--spacing) * 2);
  }

  .top-4 {
    top: calc(var(--spacing) * 4);
  }

  .top-6 {
    top: calc(var(--spacing) * 6);
  }

  .top-8 {
    top: calc(var(--spacing) * 8);
  }

  .top-32 {
    top: calc(var(--spacing) * 32);
  }

  .top-\[8\%\] {
    top: 8%;
  }

  .top-\[50\%\] {
    top: 50%;
  }

  .-right-2 {
    right: calc(var(--spacing) * -2);
  }

  .right-0 {
    right: calc(var(--spacing) * 0);
  }

  .right-2 {
    right: calc(var(--spacing) * 2);
  }

  .right-4 {
    right: calc(var(--spacing) * 4);
  }

  .right-8 {
    right: calc(var(--spacing) * 8);
  }

  .right-\[8\%\] {
    right: 8%;
  }

  .right-\[15\%\] {
    right: 15%;
  }

  .-bottom-2 {
    bottom: calc(var(--spacing) * -2);
  }

  .-bottom-4 {
    bottom: calc(var(--spacing) * -4);
  }

  .bottom-0 {
    bottom: calc(var(--spacing) * 0);
  }

  .bottom-8 {
    bottom: calc(var(--spacing) * 8);
  }

  .bottom-\[8\%\] {
    bottom: 8%;
  }

  .bottom-\[15\%\] {
    bottom: 15%;
  }

  .-left-2 {
    left: calc(var(--spacing) * -2);
  }

  .left-0 {
    left: calc(var(--spacing) * 0);
  }

  .left-1\/2 {
    left: 50%;
  }

  .left-2 {
    left: calc(var(--spacing) * 2);
  }

  .left-4 {
    left: calc(var(--spacing) * 4);
  }

  .left-6 {
    left: calc(var(--spacing) * 6);
  }

  .left-\[8\%\] {
    left: 8%;
  }

  .left-\[50\%\] {
    left: 50%;
  }

  .z-0 {
    z-index: 0;
  }

  .z-10 {
    z-index: 10;
  }

  .z-20 {
    z-index: 20;
  }

  .z-50 {
    z-index: 50;
  }

  .z-\[9999\] {
    z-index: 9999;
  }

  .col-span-2 {
    grid-column: span 2 / span 2;
  }

  .col-start-2 {
    grid-column-start: 2;
  }

  .row-span-2 {
    grid-row: span 2 / span 2;
  }

  .row-start-1 {
    grid-row-start: 1;
  }

  .\!container {
    width: 100% !important;
  }

  @media (width >= 40rem) {
    .\!container {
      max-width: 40rem !important;
    }
  }

  @media (width >= 48rem) {
    .\!container {
      max-width: 48rem !important;
    }
  }

  @media (width >= 64rem) {
    .\!container {
      max-width: 64rem !important;
    }
  }

  @media (width >= 80rem) {
    .\!container {
      max-width: 80rem !important;
    }
  }

  @media (width >= 96rem) {
    .\!container {
      max-width: 96rem !important;
    }
  }

  .container {
    width: 100%;
  }

  @media (width >= 40rem) {
    .container {
      max-width: 40rem;
    }
  }

  @media (width >= 48rem) {
    .container {
      max-width: 48rem;
    }
  }

  @media (width >= 64rem) {
    .container {
      max-width: 64rem;
    }
  }

  @media (width >= 80rem) {
    .container {
      max-width: 80rem;
    }
  }

  @media (width >= 96rem) {
    .container {
      max-width: 96rem;
    }
  }

  .-mx-1 {
    margin-inline: calc(var(--spacing) * -1);
  }

  .mx-2 {
    margin-inline: calc(var(--spacing) * 2);
  }

  .mx-auto {
    margin-inline: auto;
  }

  .my-1 {
    margin-block: calc(var(--spacing) * 1);
  }

  .mt-1 {
    margin-top: calc(var(--spacing) * 1);
  }

  .mt-2 {
    margin-top: calc(var(--spacing) * 2);
  }

  .mt-3 {
    margin-top: calc(var(--spacing) * 3);
  }

  .mt-4 {
    margin-top: calc(var(--spacing) * 4);
  }

  .mt-6 {
    margin-top: calc(var(--spacing) * 6);
  }

  .mt-8 {
    margin-top: calc(var(--spacing) * 8);
  }

  .mt-12 {
    margin-top: calc(var(--spacing) * 12);
  }

  .mr-2 {
    margin-right: calc(var(--spacing) * 2);
  }

  .mr-3 {
    margin-right: calc(var(--spacing) * 3);
  }

  .mb-1 {
    margin-bottom: calc(var(--spacing) * 1);
  }

  .mb-2 {
    margin-bottom: calc(var(--spacing) * 2);
  }

  .mb-3 {
    margin-bottom: calc(var(--spacing) * 3);
  }

  .mb-4 {
    margin-bottom: calc(var(--spacing) * 4);
  }

  .mb-6 {
    margin-bottom: calc(var(--spacing) * 6);
  }

  .mb-8 {
    margin-bottom: calc(var(--spacing) * 8);
  }

  .mb-12 {
    margin-bottom: calc(var(--spacing) * 12);
  }

  .ml-2 {
    margin-left: calc(var(--spacing) * 2);
  }

  .ml-auto {
    margin-left: auto;
  }

  .line-clamp-2 {
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    display: -webkit-box;
    overflow: hidden;
  }

  .block {
    display: block;
  }

  .flex {
    display: flex;
  }

  .grid {
    display: grid;
  }

  .hidden {
    display: none;
  }

  .inline-block {
    display: inline-block;
  }

  .inline-flex {
    display: inline-flex;
  }

  .field-sizing-content {
    field-sizing: content;
  }

  .aspect-square {
    aspect-ratio: 1;
  }

  .size-2 {
    width: calc(var(--spacing) * 2);
    height: calc(var(--spacing) * 2);
  }

  .size-3\.5 {
    width: calc(var(--spacing) * 3.5);
    height: calc(var(--spacing) * 3.5);
  }

  .size-4 {
    width: calc(var(--spacing) * 4);
    height: calc(var(--spacing) * 4);
  }

  .size-9 {
    width: calc(var(--spacing) * 9);
    height: calc(var(--spacing) * 9);
  }

  .size-10 {
    width: calc(var(--spacing) * 10);
    height: calc(var(--spacing) * 10);
  }

  .size-full {
    width: 100%;
    height: 100%;
  }

  .h-0\.5 {
    height: calc(var(--spacing) * .5);
  }

  .h-1 {
    height: calc(var(--spacing) * 1);
  }

  .h-2 {
    height: calc(var(--spacing) * 2);
  }

  .h-3 {
    height: calc(var(--spacing) * 3);
  }

  .h-4 {
    height: calc(var(--spacing) * 4);
  }

  .h-5 {
    height: calc(var(--spacing) * 5);
  }

  .h-6 {
    height: calc(var(--spacing) * 6);
  }

  .h-8 {
    height: calc(var(--spacing) * 8);
  }

  .h-9 {
    height: calc(var(--spacing) * 9);
  }

  .h-10 {
    height: calc(var(--spacing) * 10);
  }

  .h-12 {
    height: calc(var(--spacing) * 12);
  }

  .h-16 {
    height: calc(var(--spacing) * 16);
  }

  .h-20 {
    height: calc(var(--spacing) * 20);
  }

  .h-24 {
    height: calc(var(--spacing) * 24);
  }

  .h-28 {
    height: calc(var(--spacing) * 28);
  }

  .h-32 {
    height: calc(var(--spacing) * 32);
  }

  .h-40 {
    height: calc(var(--spacing) * 40);
  }

  .h-48 {
    height: calc(var(--spacing) * 48);
  }

  .h-\[500px\] {
    height: 500px;
  }

  .h-\[calc\(100\%-1px\)\] {
    height: calc(100% - 1px);
  }

  .h-\[var\(--radix-select-trigger-height\)\] {
    height: var(--radix-select-trigger-height);
  }

  .h-full {
    height: 100%;
  }

  .h-px {
    height: 1px;
  }

  .max-h-\(--radix-dropdown-menu-content-available-height\) {
    max-height: var(--radix-dropdown-menu-content-available-height);
  }

  .max-h-\(--radix-select-content-available-height\) {
    max-height: var(--radix-select-content-available-height);
  }

  .min-h-16 {
    min-height: calc(var(--spacing) * 16);
  }

  .min-h-screen {
    min-height: 100vh;
  }

  .w-0 {
    width: calc(var(--spacing) * 0);
  }

  .w-0\.5 {
    width: calc(var(--spacing) * .5);
  }

  .w-2 {
    width: calc(var(--spacing) * 2);
  }

  .w-3 {
    width: calc(var(--spacing) * 3);
  }

  .w-4 {
    width: calc(var(--spacing) * 4);
  }

  .w-5 {
    width: calc(var(--spacing) * 5);
  }

  .w-6 {
    width: calc(var(--spacing) * 6);
  }

  .w-8 {
    width: calc(var(--spacing) * 8);
  }

  .w-10 {
    width: calc(var(--spacing) * 10);
  }

  .w-12 {
    width: calc(var(--spacing) * 12);
  }

  .w-16 {
    width: calc(var(--spacing) * 16);
  }

  .w-20 {
    width: calc(var(--spacing) * 20);
  }

  .w-24 {
    width: calc(var(--spacing) * 24);
  }

  .w-32 {
    width: calc(var(--spacing) * 32);
  }

  .w-36 {
    width: calc(var(--spacing) * 36);
  }

  .w-40 {
    width: calc(var(--spacing) * 40);
  }

  .w-48 {
    width: calc(var(--spacing) * 48);
  }

  .w-56 {
    width: calc(var(--spacing) * 56);
  }

  .w-64 {
    width: calc(var(--spacing) * 64);
  }

  .w-\[700px\] {
    width: 700px;
  }

  .w-fit {
    width: fit-content;
  }

  .w-full {
    width: 100%;
  }

  .max-w-2xl {
    max-width: var(--container-2xl);
  }

  .max-w-4xl {
    max-width: var(--container-4xl);
  }

  .max-w-6xl {
    max-width: var(--container-6xl);
  }

  .max-w-7xl {
    max-width: var(--container-7xl);
  }

  .max-w-\[calc\(100\%-2rem\)\] {
    max-width: calc(100% - 2rem);
  }

  .max-w-lg {
    max-width: var(--container-lg);
  }

  .max-w-md {
    max-width: var(--container-md);
  }

  .max-w-sm {
    max-width: var(--container-sm);
  }

  .min-w-0 {
    min-width: calc(var(--spacing) * 0);
  }

  .min-w-\[8rem\] {
    min-width: 8rem;
  }

  .min-w-\[var\(--radix-select-trigger-width\)\] {
    min-width: var(--radix-select-trigger-width);
  }

  .flex-1 {
    flex: 1;
  }

  .shrink-0 {
    flex-shrink: 0;
  }

  .grow {
    flex-grow: 1;
  }

  .origin-\(--radix-dropdown-menu-content-transform-origin\) {
    transform-origin: var(--radix-dropdown-menu-content-transform-origin);
  }

  .origin-\(--radix-select-content-transform-origin\) {
    transform-origin: var(--radix-select-content-transform-origin);
  }

  .-translate-x-1\/2 {
    --tw-translate-x: calc(calc(1 / 2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .translate-x-\[-50\%\] {
    --tw-translate-x: -50%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .translate-y-\[-50\%\] {
    --tw-translate-y: -50%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .scale-95 {
    --tw-scale-x: 95%;
    --tw-scale-y: 95%;
    --tw-scale-z: 95%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }

  .scale-110 {
    --tw-scale-x: 110%;
    --tw-scale-y: 110%;
    --tw-scale-z: 110%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }

  .transform {
    transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
  }

  .animate-bounce {
    animation: var(--animate-bounce);
  }

  .animate-pulse {
    animation: var(--animate-pulse);
  }

  .cursor-default {
    cursor: default;
  }

  .cursor-grab {
    cursor: grab;
  }

  .cursor-not-allowed {
    cursor: not-allowed;
  }

  .cursor-pointer {
    cursor: pointer;
  }

  .resize-none {
    resize: none;
  }

  .scroll-my-1 {
    scroll-margin-block: calc(var(--spacing) * 1);
  }

  .auto-rows-min {
    grid-auto-rows: min-content;
  }

  .grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }

  .grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  .grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }

  .grid-cols-4 {
    grid-template-columns: repeat(4, minmax(0, 1fr));
  }

  .grid-rows-\[auto_auto\] {
    grid-template-rows: auto auto;
  }

  .flex-col {
    flex-direction: column;
  }

  .flex-col-reverse {
    flex-direction: column-reverse;
  }

  .flex-wrap {
    flex-wrap: wrap;
  }

  .items-center {
    align-items: center;
  }

  .items-start {
    align-items: flex-start;
  }

  .justify-between {
    justify-content: space-between;
  }

  .justify-center {
    justify-content: center;
  }

  .justify-end {
    justify-content: flex-end;
  }

  .justify-start {
    justify-content: flex-start;
  }

  .gap-1 {
    gap: calc(var(--spacing) * 1);
  }

  .gap-1\.5 {
    gap: calc(var(--spacing) * 1.5);
  }

  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }

  .gap-3 {
    gap: calc(var(--spacing) * 3);
  }

  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }

  .gap-6 {
    gap: calc(var(--spacing) * 6);
  }

  .gap-8 {
    gap: calc(var(--spacing) * 8);
  }

  .gap-16 {
    gap: calc(var(--spacing) * 16);
  }

  :where(.space-y-1 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 1) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-y-2 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 2) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-y-3 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 3) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-y-4 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-y-6 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 6) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-x-1 > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(calc(var(--spacing) * 1) * var(--tw-space-x-reverse));
    margin-inline-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.space-x-2 > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(calc(var(--spacing) * 2) * var(--tw-space-x-reverse));
    margin-inline-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.space-x-3 > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(calc(var(--spacing) * 3) * var(--tw-space-x-reverse));
    margin-inline-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.space-x-4 > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(calc(var(--spacing) * 4) * var(--tw-space-x-reverse));
    margin-inline-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.space-x-6 > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(calc(var(--spacing) * 6) * var(--tw-space-x-reverse));
    margin-inline-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.space-x-8 > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(calc(var(--spacing) * 8) * var(--tw-space-x-reverse));
    margin-inline-end: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.space-x-12 > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(calc(var(--spacing) * 12) * var(--tw-space-x-reverse));
    margin-inline-end: calc(calc(var(--spacing) * 12) * calc(1 - var(--tw-space-x-reverse)));
  }

  .self-start {
    align-self: flex-start;
  }

  .justify-self-end {
    justify-self: flex-end;
  }

  .truncate {
    text-overflow: ellipsis;
    white-space: nowrap;
    overflow: hidden;
  }

  .overflow-hidden {
    overflow: hidden;
  }

  .overflow-x-hidden {
    overflow-x: hidden;
  }

  .overflow-y-auto {
    overflow-y: auto;
  }

  .rounded {
    border-radius: .25rem;
  }

  .rounded-2xl {
    border-radius: var(--radius-2xl);
  }

  .rounded-\[4px\] {
    border-radius: 4px;
  }

  .rounded-full {
    border-radius: 3.40282e38px;
  }

  .rounded-lg {
    border-radius: var(--radius);
  }

  .rounded-md {
    border-radius: calc(var(--radius)  - 2px);
  }

  .rounded-sm {
    border-radius: calc(var(--radius)  - 4px);
  }

  .rounded-xl {
    border-radius: calc(var(--radius)  + 4px);
  }

  .rounded-xs {
    border-radius: var(--radius-xs);
  }

  .rounded-t-3xl {
    border-top-left-radius: var(--radius-3xl);
    border-top-right-radius: var(--radius-3xl);
  }

  .rounded-t-lg {
    border-top-left-radius: var(--radius);
    border-top-right-radius: var(--radius);
  }

  .rounded-tl-lg {
    border-top-left-radius: var(--radius);
  }

  .rounded-tr-lg {
    border-top-right-radius: var(--radius);
  }

  .rounded-b-3xl {
    border-bottom-right-radius: var(--radius-3xl);
    border-bottom-left-radius: var(--radius-3xl);
  }

  .rounded-br-lg {
    border-bottom-right-radius: var(--radius);
  }

  .rounded-bl-lg {
    border-bottom-left-radius: var(--radius);
  }

  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }

  .border-0 {
    border-style: var(--tw-border-style);
    border-width: 0;
  }

  .border-2 {
    border-style: var(--tw-border-style);
    border-width: 2px;
  }

  .border-4 {
    border-style: var(--tw-border-style);
    border-width: 4px;
  }

  .border-t {
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
  }

  .border-t-2 {
    border-top-style: var(--tw-border-style);
    border-top-width: 2px;
  }

  .border-t-4 {
    border-top-style: var(--tw-border-style);
    border-top-width: 4px;
  }

  .border-r-4 {
    border-right-style: var(--tw-border-style);
    border-right-width: 4px;
  }

  .border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }

  .border-b-2 {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 2px;
  }

  .border-b-4 {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 4px;
  }

  .border-l-4 {
    border-left-style: var(--tw-border-style);
    border-left-width: 4px;
  }

  .border-dashed {
    --tw-border-style: dashed;
    border-style: dashed;
  }

  .border-amber-600 {
    border-color: var(--color-amber-600);
  }

  .border-background {
    border-color: var(--background);
  }

  .border-blue-500\/50 {
    border-color: color-mix(in srgb, oklch(.623 .214 259.815) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-blue-500\/50 {
      border-color: color-mix(in oklab, var(--color-blue-500) 50%, transparent);
    }
  }

  .border-border {
    border-color: var(--border);
  }

  .border-border\/50 {
    border-color: var(--border);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-border\/50 {
      border-color: color-mix(in oklab, var(--border) 50%, transparent);
    }
  }

  .border-current\/30 {
    border-color: currentColor;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-current\/30 {
      border-color: color-mix(in oklab, currentcolor 30%, transparent);
    }
  }

  .border-cyan-400 {
    border-color: var(--color-cyan-400);
  }

  .border-gray-200 {
    border-color: var(--color-gray-200);
  }

  .border-gray-300 {
    border-color: var(--color-gray-300);
  }

  .border-gray-500 {
    border-color: var(--color-gray-500);
  }

  .border-gray-500\/20 {
    border-color: color-mix(in srgb, oklch(.551 .027 264.364) 20%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-gray-500\/20 {
      border-color: color-mix(in oklab, var(--color-gray-500) 20%, transparent);
    }
  }

  .border-gray-600 {
    border-color: var(--color-gray-600);
  }

  .border-gray-700 {
    border-color: var(--color-gray-700);
  }

  .border-green-300 {
    border-color: var(--color-green-300);
  }

  .border-green-400 {
    border-color: var(--color-green-400);
  }

  .border-green-500\/50 {
    border-color: color-mix(in srgb, oklch(.723 .219 149.579) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-green-500\/50 {
      border-color: color-mix(in oklab, var(--color-green-500) 50%, transparent);
    }
  }

  .border-input {
    border-color: var(--input);
  }

  .border-orange-500\/20 {
    border-color: color-mix(in srgb, oklch(.705 .213 47.604) 20%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-orange-500\/20 {
      border-color: color-mix(in oklab, var(--color-orange-500) 20%, transparent);
    }
  }

  .border-primary {
    border-color: var(--primary);
  }

  .border-purple-400 {
    border-color: var(--color-purple-400);
  }

  .border-purple-500\/50 {
    border-color: color-mix(in srgb, oklch(.627 .265 303.9) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-purple-500\/50 {
      border-color: color-mix(in oklab, var(--color-purple-500) 50%, transparent);
    }
  }

  .border-transparent {
    border-color: #0000;
  }

  .border-yellow-300 {
    border-color: var(--color-yellow-300);
  }

  .border-yellow-400 {
    border-color: var(--color-yellow-400);
  }

  .border-yellow-500\/20 {
    border-color: color-mix(in srgb, oklch(.795 .184 86.047) 20%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-yellow-500\/20 {
      border-color: color-mix(in oklab, var(--color-yellow-500) 20%, transparent);
    }
  }

  .border-yellow-500\/50 {
    border-color: color-mix(in srgb, oklch(.795 .184 86.047) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-yellow-500\/50 {
      border-color: color-mix(in oklab, var(--color-yellow-500) 50%, transparent);
    }
  }

  .border-yellow-600 {
    border-color: var(--color-yellow-600);
  }

  .bg-accent {
    background-color: var(--accent);
  }

  .bg-amber-900\/20 {
    background-color: color-mix(in srgb, oklch(.414 .112 45.904) 20%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-amber-900\/20 {
      background-color: color-mix(in oklab, var(--color-amber-900) 20%, transparent);
    }
  }

  .bg-background {
    background-color: var(--background);
  }

  .bg-background\/80 {
    background-color: var(--background);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-background\/80 {
      background-color: color-mix(in oklab, var(--background) 80%, transparent);
    }
  }

  .bg-black {
    background-color: var(--color-black);
  }

  .bg-black\/20 {
    background-color: #0003;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-black\/20 {
      background-color: color-mix(in oklab, var(--color-black) 20%, transparent);
    }
  }

  .bg-black\/50 {
    background-color: #00000080;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-black\/50 {
      background-color: color-mix(in oklab, var(--color-black) 50%, transparent);
    }
  }

  .bg-black\/80 {
    background-color: #000c;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-black\/80 {
      background-color: color-mix(in oklab, var(--color-black) 80%, transparent);
    }
  }

  .bg-blue-100 {
    background-color: var(--color-blue-100);
  }

  .bg-blue-500 {
    background-color: var(--color-blue-500);
  }

  .bg-blue-500\/20 {
    background-color: color-mix(in srgb, oklch(.623 .214 259.815) 20%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-blue-500\/20 {
      background-color: color-mix(in oklab, var(--color-blue-500) 20%, transparent);
    }
  }

  .bg-border {
    background-color: var(--border);
  }

  .bg-card {
    background-color: var(--card);
  }

  .bg-card\/70 {
    background-color: var(--card);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-card\/70 {
      background-color: color-mix(in oklab, var(--card) 70%, transparent);
    }
  }

  .bg-current\/20 {
    background-color: currentColor;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-current\/20 {
      background-color: color-mix(in oklab, currentcolor 20%, transparent);
    }
  }

  .bg-cyan-500 {
    background-color: var(--color-cyan-500);
  }

  .bg-cyan-900\/20 {
    background-color: color-mix(in srgb, oklch(.398 .07 227.392) 20%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-cyan-900\/20 {
      background-color: color-mix(in oklab, var(--color-cyan-900) 20%, transparent);
    }
  }

  .bg-destructive {
    background-color: var(--destructive);
  }

  .bg-gray-100 {
    background-color: var(--color-gray-100);
  }

  .bg-gray-200 {
    background-color: var(--color-gray-200);
  }

  .bg-gray-300 {
    background-color: var(--color-gray-300);
  }

  .bg-gray-500\/10 {
    background-color: color-mix(in srgb, oklch(.551 .027 264.364) 10%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-gray-500\/10 {
      background-color: color-mix(in oklab, var(--color-gray-500) 10%, transparent);
    }
  }

  .bg-gray-600 {
    background-color: var(--color-gray-600);
  }

  .bg-gray-800 {
    background-color: var(--color-gray-800);
  }

  .bg-gray-900 {
    background-color: var(--color-gray-900);
  }

  .bg-green-100 {
    background-color: var(--color-green-100);
  }

  .bg-green-300 {
    background-color: var(--color-green-300);
  }

  .bg-green-400 {
    background-color: var(--color-green-400);
  }

  .bg-green-400\/5 {
    background-color: color-mix(in srgb, oklch(.792 .209 151.711) 5%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-green-400\/5 {
      background-color: color-mix(in oklab, var(--color-green-400) 5%, transparent);
    }
  }

  .bg-green-500 {
    background-color: var(--color-green-500);
  }

  .bg-green-500\/20 {
    background-color: color-mix(in srgb, oklch(.723 .219 149.579) 20%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-green-500\/20 {
      background-color: color-mix(in oklab, var(--color-green-500) 20%, transparent);
    }
  }

  .bg-green-900\/20 {
    background-color: color-mix(in srgb, oklch(.393 .095 152.535) 20%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-green-900\/20 {
      background-color: color-mix(in oklab, var(--color-green-900) 20%, transparent);
    }
  }

  .bg-input-background {
    background-color: var(--input-background);
  }

  .bg-muted {
    background-color: var(--muted);
  }

  .bg-orange-100 {
    background-color: var(--color-orange-100);
  }

  .bg-orange-500\/10 {
    background-color: color-mix(in srgb, oklch(.705 .213 47.604) 10%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-orange-500\/10 {
      background-color: color-mix(in oklab, var(--color-orange-500) 10%, transparent);
    }
  }

  .bg-pink-100 {
    background-color: var(--color-pink-100);
  }

  .bg-popover {
    background-color: var(--popover);
  }

  .bg-primary {
    background-color: var(--primary);
  }

  .bg-purple-100 {
    background-color: var(--color-purple-100);
  }

  .bg-purple-500\/20 {
    background-color: color-mix(in srgb, oklch(.627 .265 303.9) 20%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-purple-500\/20 {
      background-color: color-mix(in oklab, var(--color-purple-500) 20%, transparent);
    }
  }

  .bg-purple-900\/20 {
    background-color: color-mix(in srgb, oklch(.381 .176 304.987) 20%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-purple-900\/20 {
      background-color: color-mix(in oklab, var(--color-purple-900) 20%, transparent);
    }
  }

  .bg-red-500 {
    background-color: var(--color-red-500);
  }

  .bg-secondary {
    background-color: var(--secondary);
  }

  .bg-white {
    background-color: var(--color-white);
  }

  .bg-yellow-400 {
    background-color: var(--color-yellow-400);
  }

  .bg-yellow-500 {
    background-color: var(--color-yellow-500);
  }

  .bg-yellow-500\/10 {
    background-color: color-mix(in srgb, oklch(.795 .184 86.047) 10%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-yellow-500\/10 {
      background-color: color-mix(in oklab, var(--color-yellow-500) 10%, transparent);
    }
  }

  .bg-yellow-500\/20 {
    background-color: color-mix(in srgb, oklch(.795 .184 86.047) 20%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-yellow-500\/20 {
      background-color: color-mix(in oklab, var(--color-yellow-500) 20%, transparent);
    }
  }

  .bg-yellow-900\/20 {
    background-color: color-mix(in srgb, oklch(.421 .095 57.708) 20%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-yellow-900\/20 {
      background-color: color-mix(in oklab, var(--color-yellow-900) 20%, transparent);
    }
  }

  .bg-gradient-to-b {
    --tw-gradient-position: to bottom in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }

  .bg-gradient-to-br {
    --tw-gradient-position: to bottom right in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }

  .bg-gradient-to-r {
    --tw-gradient-position: to right in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }

  .bg-gradient-to-t {
    --tw-gradient-position: to top in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }

  .bg-gradient-to-tr {
    --tw-gradient-position: to top right in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }

  .bg-\[radial-gradient\(circle_at_center\,_rgba\(255\,255\,255\,0\.1\)_1px\,_transparent_1px\)\] {
    background-image: radial-gradient(circle, #ffffff1a 1px, #0000 1px);
  }

  .from-amber-100 {
    --tw-gradient-from: var(--color-amber-100);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-blue-900 {
    --tw-gradient-from: var(--color-blue-900);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-cyan-900\/30 {
    --tw-gradient-from: color-mix(in srgb, oklch(.398 .07 227.392) 30%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-cyan-900\/30 {
      --tw-gradient-from: color-mix(in oklab, var(--color-cyan-900) 30%, transparent);
    }
  }

  .from-gray-800 {
    --tw-gradient-from: var(--color-gray-800);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-gray-900 {
    --tw-gradient-from: var(--color-gray-900);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-gray-900\/80 {
    --tw-gradient-from: color-mix(in srgb, oklch(.21 .034 264.665) 80%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-gray-900\/80 {
      --tw-gradient-from: color-mix(in oklab, var(--color-gray-900) 80%, transparent);
    }
  }

  .from-green-900\/50 {
    --tw-gradient-from: color-mix(in srgb, oklch(.393 .095 152.535) 50%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-green-900\/50 {
      --tw-gradient-from: color-mix(in oklab, var(--color-green-900) 50%, transparent);
    }
  }

  .from-purple-900\/20 {
    --tw-gradient-from: color-mix(in srgb, oklch(.381 .176 304.987) 20%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-purple-900\/20 {
      --tw-gradient-from: color-mix(in oklab, var(--color-purple-900) 20%, transparent);
    }
  }

  .from-transparent {
    --tw-gradient-from: transparent;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-white {
    --tw-gradient-from: var(--color-white);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-white\/5 {
    --tw-gradient-from: #ffffff0d;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-white\/5 {
      --tw-gradient-from: color-mix(in oklab, var(--color-white) 5%, transparent);
    }
  }

  .from-white\/20 {
    --tw-gradient-from: #fff3;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-white\/20 {
      --tw-gradient-from: color-mix(in oklab, var(--color-white) 20%, transparent);
    }
  }

  .from-yellow-400 {
    --tw-gradient-from: var(--color-yellow-400);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-yellow-900\/50 {
    --tw-gradient-from: color-mix(in srgb, oklch(.421 .095 57.708) 50%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-yellow-900\/50 {
      --tw-gradient-from: color-mix(in oklab, var(--color-yellow-900) 50%, transparent);
    }
  }

  .via-blue-800 {
    --tw-gradient-via: var(--color-blue-800);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .via-transparent {
    --tw-gradient-via: transparent;
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .via-yellow-200\/20 {
    --tw-gradient-via: color-mix(in srgb, oklch(.945 .129 101.54) 20%, transparent);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .via-yellow-200\/20 {
      --tw-gradient-via: color-mix(in oklab, var(--color-yellow-200) 20%, transparent);
    }
  }

  .via-yellow-200\/30 {
    --tw-gradient-via: color-mix(in srgb, oklch(.945 .129 101.54) 30%, transparent);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .via-yellow-200\/30 {
      --tw-gradient-via: color-mix(in oklab, var(--color-yellow-200) 30%, transparent);
    }
  }

  .via-yellow-500 {
    --tw-gradient-via: var(--color-yellow-500);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .to-amber-200 {
    --tw-gradient-to: var(--color-amber-200);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-amber-600 {
    --tw-gradient-to: var(--color-amber-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-black {
    --tw-gradient-to: var(--color-black);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-black\/60 {
    --tw-gradient-to: #0009;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-black\/60 {
      --tw-gradient-to: color-mix(in oklab, var(--color-black) 60%, transparent);
    }
  }

  .to-blue-900 {
    --tw-gradient-to: var(--color-blue-900);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-blue-900\/20 {
    --tw-gradient-to: color-mix(in srgb, oklch(.379 .146 265.522) 20%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-blue-900\/20 {
      --tw-gradient-to: color-mix(in oklab, var(--color-blue-900) 20%, transparent);
    }
  }

  .to-gray-900 {
    --tw-gradient-to: var(--color-gray-900);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-green-800\/30 {
    --tw-gradient-to: color-mix(in srgb, oklch(.448 .119 151.328) 30%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-green-800\/30 {
      --tw-gradient-to: color-mix(in oklab, var(--color-green-800) 30%, transparent);
    }
  }

  .to-purple-900\/30 {
    --tw-gradient-to: color-mix(in srgb, oklch(.381 .176 304.987) 30%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-purple-900\/30 {
      --tw-gradient-to: color-mix(in oklab, var(--color-purple-900) 30%, transparent);
    }
  }

  .to-slate-50 {
    --tw-gradient-to: var(--color-slate-50);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-transparent {
    --tw-gradient-to: transparent;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-yellow-800\/30 {
    --tw-gradient-to: color-mix(in srgb, oklch(.476 .114 61.907) 30%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-yellow-800\/30 {
      --tw-gradient-to: color-mix(in oklab, var(--color-yellow-800) 30%, transparent);
    }
  }

  .bg-\[length\:8px_8px\] {
    background-size: 8px 8px;
  }

  .bg-cover {
    background-size: cover;
  }

  .bg-center {
    background-position: center;
  }

  .fill-current {
    fill: currentColor;
  }

  .object-contain {
    object-fit: contain;
  }

  .object-cover {
    object-fit: cover;
  }

  .p-1 {
    padding: calc(var(--spacing) * 1);
  }

  .p-2 {
    padding: calc(var(--spacing) * 2);
  }

  .p-3 {
    padding: calc(var(--spacing) * 3);
  }

  .p-4 {
    padding: calc(var(--spacing) * 4);
  }

  .p-6 {
    padding: calc(var(--spacing) * 6);
  }

  .p-8 {
    padding: calc(var(--spacing) * 8);
  }

  .p-12 {
    padding: calc(var(--spacing) * 12);
  }

  .p-\[3px\] {
    padding: 3px;
  }

  .px-2 {
    padding-inline: calc(var(--spacing) * 2);
  }

  .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }

  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }

  .px-6 {
    padding-inline: calc(var(--spacing) * 6);
  }

  .px-8 {
    padding-inline: calc(var(--spacing) * 8);
  }

  .px-12 {
    padding-inline: calc(var(--spacing) * 12);
  }

  .py-0\.5 {
    padding-block: calc(var(--spacing) * .5);
  }

  .py-1 {
    padding-block: calc(var(--spacing) * 1);
  }

  .py-1\.5 {
    padding-block: calc(var(--spacing) * 1.5);
  }

  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }

  .py-3 {
    padding-block: calc(var(--spacing) * 3);
  }

  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }

  .py-6 {
    padding-block: calc(var(--spacing) * 6);
  }

  .py-8 {
    padding-block: calc(var(--spacing) * 8);
  }

  .py-12 {
    padding-block: calc(var(--spacing) * 12);
  }

  .pt-2 {
    padding-top: calc(var(--spacing) * 2);
  }

  .pt-4 {
    padding-top: calc(var(--spacing) * 4);
  }

  .pt-6 {
    padding-top: calc(var(--spacing) * 6);
  }

  .pt-8 {
    padding-top: calc(var(--spacing) * 8);
  }

  .pr-2 {
    padding-right: calc(var(--spacing) * 2);
  }

  .pr-8 {
    padding-right: calc(var(--spacing) * 8);
  }

  .pb-4 {
    padding-bottom: calc(var(--spacing) * 4);
  }

  .pb-6 {
    padding-bottom: calc(var(--spacing) * 6);
  }

  .pl-2 {
    padding-left: calc(var(--spacing) * 2);
  }

  .pl-8 {
    padding-left: calc(var(--spacing) * 8);
  }

  .text-center {
    text-align: center;
  }

  .text-left {
    text-align: left;
  }

  .align-middle {
    vertical-align: middle;
  }

  .font-\[Aoboshi_One\] {
    font-family: Aoboshi One;
  }

  .font-mono {
    font-family: var(--font-mono);
  }

  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }

  .text-3xl {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }

  .text-4xl {
    font-size: var(--text-4xl);
    line-height: var(--tw-leading, var(--text-4xl--line-height));
  }

  .text-5xl {
    font-size: var(--text-5xl);
    line-height: var(--tw-leading, var(--text-5xl--line-height));
  }

  .text-6xl {
    font-size: var(--text-6xl);
    line-height: var(--tw-leading, var(--text-6xl--line-height));
  }

  .text-9xl {
    font-size: var(--text-9xl);
    line-height: var(--tw-leading, var(--text-9xl--line-height));
  }

  .text-base {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }

  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }

  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }

  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }

  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }

  .leading-none {
    --tw-leading: 1;
    line-height: 1;
  }

  .leading-relaxed {
    --tw-leading: var(--leading-relaxed);
    line-height: var(--leading-relaxed);
  }

  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }

  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }

  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }

  .tracking-wider {
    --tw-tracking: var(--tracking-wider);
    letter-spacing: var(--tracking-wider);
  }

  .tracking-widest {
    --tw-tracking: var(--tracking-widest);
    letter-spacing: var(--tracking-widest);
  }

  .whitespace-nowrap {
    white-space: nowrap;
  }

  .whitespace-pre-wrap {
    white-space: pre-wrap;
  }

  .text-\[rgba\(0\,0\,0\,1\)\] {
    color: #000;
  }

  .text-\[rgba\(255\,240\,240\,1\)\] {
    color: #fff0f0;
  }

  .text-accent {
    color: var(--accent);
  }

  .text-amber-200 {
    color: var(--color-amber-200);
  }

  .text-amber-300 {
    color: var(--color-amber-300);
  }

  .text-amber-500 {
    color: var(--color-amber-500);
  }

  .text-amber-600 {
    color: var(--color-amber-600);
  }

  .text-amber-700 {
    color: var(--color-amber-700);
  }

  .text-amber-800 {
    color: var(--color-amber-800);
  }

  .text-black {
    color: var(--color-black);
  }

  .text-blue-400 {
    color: var(--color-blue-400);
  }

  .text-blue-900 {
    color: var(--color-blue-900);
  }

  .text-card-foreground {
    color: var(--card-foreground);
  }

  .text-current {
    color: currentColor;
  }

  .text-cyan-400 {
    color: var(--color-cyan-400);
  }

  .text-destructive {
    color: var(--destructive);
  }

  .text-foreground {
    color: var(--foreground);
  }

  .text-gray-300 {
    color: var(--color-gray-300);
  }

  .text-gray-400 {
    color: var(--color-gray-400);
  }

  .text-gray-500 {
    color: var(--color-gray-500);
  }

  .text-gray-600 {
    color: var(--color-gray-600);
  }

  .text-gray-700 {
    color: var(--color-gray-700);
  }

  .text-gray-900 {
    color: var(--color-gray-900);
  }

  .text-green-400 {
    color: var(--color-green-400);
  }

  .text-green-600 {
    color: var(--color-green-600);
  }

  .text-green-900 {
    color: var(--color-green-900);
  }

  .text-muted-foreground {
    color: var(--muted-foreground);
  }

  .text-orange-900 {
    color: var(--color-orange-900);
  }

  .text-pink-400 {
    color: var(--color-pink-400);
  }

  .text-pink-900 {
    color: var(--color-pink-900);
  }

  .text-popover-foreground {
    color: var(--popover-foreground);
  }

  .text-primary {
    color: var(--primary);
  }

  .text-primary-foreground {
    color: var(--primary-foreground);
  }

  .text-purple-300 {
    color: var(--color-purple-300);
  }

  .text-purple-400 {
    color: var(--color-purple-400);
  }

  .text-purple-900 {
    color: var(--color-purple-900);
  }

  .text-red-400 {
    color: var(--color-red-400);
  }

  .text-red-500 {
    color: var(--color-red-500);
  }

  .text-secondary-foreground {
    color: var(--secondary-foreground);
  }

  .text-white {
    color: var(--color-white);
  }

  .text-yellow-400 {
    color: var(--color-yellow-400);
  }

  .uppercase {
    text-transform: uppercase;
  }

  .italic {
    font-style: italic;
  }

  .underline-offset-4 {
    text-underline-offset: 4px;
  }

  .opacity-0 {
    opacity: 0;
  }

  .opacity-20 {
    opacity: .2;
  }

  .opacity-30 {
    opacity: .3;
  }

  .opacity-50 {
    opacity: .5;
  }

  .opacity-60 {
    opacity: .6;
  }

  .opacity-70 {
    opacity: .7;
  }

  .shadow-2xl {
    --tw-shadow: 0 25px 50px -12px var(--tw-shadow-color, #00000040);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-inner {
    --tw-shadow: inset 0 2px 4px 0 var(--tw-shadow-color, #0000000d);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-lg {
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, #0000001a), 0 4px 6px -4px var(--tw-shadow-color, #0000001a);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-md {
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, #0000001a), 0 2px 4px -2px var(--tw-shadow-color, #0000001a);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-xs {
    --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, #0000000d);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-blue-500\/50 {
    --tw-shadow-color: color-mix(in srgb, oklch(.623 .214 259.815) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .shadow-blue-500\/50 {
      --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-blue-500) 50%, transparent) var(--tw-shadow-alpha), transparent);
    }
  }

  .shadow-green-400\/50 {
    --tw-shadow-color: color-mix(in srgb, oklch(.792 .209 151.711) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .shadow-green-400\/50 {
      --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-green-400) 50%, transparent) var(--tw-shadow-alpha), transparent);
    }
  }

  .shadow-red-500\/50 {
    --tw-shadow-color: color-mix(in srgb, oklch(.637 .237 25.331) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .shadow-red-500\/50 {
      --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-red-500) 50%, transparent) var(--tw-shadow-alpha), transparent);
    }
  }

  .shadow-yellow-400\/50 {
    --tw-shadow-color: color-mix(in srgb, oklch(.852 .199 91.936) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .shadow-yellow-400\/50 {
      --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-yellow-400) 50%, transparent) var(--tw-shadow-alpha), transparent);
    }
  }

  .ring-offset-background {
    --tw-ring-offset-color: var(--background);
  }

  .outline-hidden {
    --tw-outline-style: none;
    outline-style: none;
  }

  @media (forced-colors: active) {
    .outline-hidden {
      outline-offset: 2px;
      outline: 2px solid #0000;
    }
  }

  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }

  .blur-lg {
    --tw-blur: blur(var(--blur-lg));
    filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
  }

  .blur-sm {
    --tw-blur: blur(var(--blur-sm));
    filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
  }

  .filter {
    filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
  }

  .backdrop-blur-md {
    --tw-backdrop-blur: blur(var(--blur-md));
    -webkit-backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
    backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
  }

  .transition-\[color\,box-shadow\] {
    transition-property: color, box-shadow;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-opacity {
    transition-property: opacity;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-shadow {
    transition-property: box-shadow;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-transform {
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-none {
    transition-property: none;
  }

  .duration-200 {
    --tw-duration: .2s;
    transition-duration: .2s;
  }

  .duration-300 {
    --tw-duration: .3s;
    transition-duration: .3s;
  }

  .duration-500 {
    --tw-duration: .5s;
    transition-duration: .5s;
  }

  .outline-none {
    --tw-outline-style: none;
    outline-style: none;
  }

  .select-none {
    -webkit-user-select: none;
    user-select: none;
  }

  @media (hover: hover) {
    .group-hover\:translate-x-1:is(:where(.group):hover *) {
      --tw-translate-x: calc(var(--spacing) * 1);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }

  @media (hover: hover) {
    .group-hover\:opacity-100:is(:where(.group):hover *) {
      opacity: 1;
    }
  }

  .group-data-\[disabled\=true\]\:pointer-events-none:is(:where(.group)[data-disabled="true"] *) {
    pointer-events: none;
  }

  .group-data-\[disabled\=true\]\:opacity-50:is(:where(.group)[data-disabled="true"] *) {
    opacity: .5;
  }

  .peer-disabled\:cursor-not-allowed:is(:where(.peer):disabled ~ *) {
    cursor: not-allowed;
  }

  .peer-disabled\:opacity-50:is(:where(.peer):disabled ~ *) {
    opacity: .5;
  }

  .selection\:bg-primary ::selection, .selection\:bg-primary::selection {
    background-color: var(--primary);
  }

  .selection\:text-primary-foreground ::selection, .selection\:text-primary-foreground::selection {
    color: var(--primary-foreground);
  }

  .file\:inline-flex::file-selector-button {
    display: inline-flex;
  }

  .file\:h-7::file-selector-button {
    height: calc(var(--spacing) * 7);
  }

  .file\:border-0::file-selector-button {
    border-style: var(--tw-border-style);
    border-width: 0;
  }

  .file\:bg-transparent::file-selector-button {
    background-color: #0000;
  }

  .file\:text-sm::file-selector-button {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }

  .file\:font-medium::file-selector-button {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }

  .file\:text-foreground::file-selector-button {
    color: var(--foreground);
  }

  .placeholder\:text-muted-foreground::placeholder {
    color: var(--muted-foreground);
  }

  @media (hover: hover) {
    .hover\:w-full:hover {
      width: 100%;
    }
  }

  @media (hover: hover) {
    .hover\:scale-105:hover {
      --tw-scale-x: 105%;
      --tw-scale-y: 105%;
      --tw-scale-z: 105%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }

  @media (hover: hover) {
    .hover\:scale-110:hover {
      --tw-scale-x: 110%;
      --tw-scale-y: 110%;
      --tw-scale-z: 110%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }

  @media (hover: hover) {
    .hover\:border-muted-foreground:hover {
      border-color: var(--muted-foreground);
    }
  }

  @media (hover: hover) {
    .hover\:border-primary:hover {
      border-color: var(--primary);
    }
  }

  @media (hover: hover) {
    .hover\:bg-accent:hover {
      background-color: var(--accent);
    }
  }

  @media (hover: hover) {
    .hover\:bg-accent\/90:hover {
      background-color: var(--accent);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-accent\/90:hover {
        background-color: color-mix(in oklab, var(--accent) 90%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-blue-50:hover {
      background-color: var(--color-blue-50);
    }
  }

  @media (hover: hover) {
    .hover\:bg-cyan-900\/40:hover {
      background-color: color-mix(in srgb, oklch(.398 .07 227.392) 40%, transparent);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-cyan-900\/40:hover {
        background-color: color-mix(in oklab, var(--color-cyan-900) 40%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-destructive\/90:hover {
      background-color: var(--destructive);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-destructive\/90:hover {
        background-color: color-mix(in oklab, var(--destructive) 90%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-gray-800:hover {
      background-color: var(--color-gray-800);
    }
  }

  @media (hover: hover) {
    .hover\:bg-green-900\/30:hover {
      background-color: color-mix(in srgb, oklch(.393 .095 152.535) 30%, transparent);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-green-900\/30:hover {
        background-color: color-mix(in oklab, var(--color-green-900) 30%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-muted\/50:hover {
      background-color: var(--muted);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-muted\/50:hover {
        background-color: color-mix(in oklab, var(--muted) 50%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-primary\/90:hover {
      background-color: var(--primary);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-primary\/90:hover {
        background-color: color-mix(in oklab, var(--primary) 90%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-purple-900\/40:hover {
      background-color: color-mix(in srgb, oklch(.381 .176 304.987) 40%, transparent);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-purple-900\/40:hover {
        background-color: color-mix(in oklab, var(--color-purple-900) 40%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-red-50:hover {
      background-color: var(--color-red-50);
    }
  }

  @media (hover: hover) {
    .hover\:bg-secondary:hover {
      background-color: var(--secondary);
    }
  }

  @media (hover: hover) {
    .hover\:bg-secondary\/50:hover {
      background-color: var(--secondary);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-secondary\/50:hover {
        background-color: color-mix(in oklab, var(--secondary) 50%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-secondary\/80:hover {
      background-color: var(--secondary);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-secondary\/80:hover {
        background-color: color-mix(in oklab, var(--secondary) 80%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:text-accent-foreground:hover {
      color: var(--accent-foreground);
    }
  }

  @media (hover: hover) {
    .hover\:text-amber-900:hover {
      color: var(--color-amber-900);
    }
  }

  @media (hover: hover) {
    .hover\:text-foreground:hover {
      color: var(--foreground);
    }
  }

  @media (hover: hover) {
    .hover\:text-primary\/80:hover {
      color: var(--primary);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:text-primary\/80:hover {
        color: color-mix(in oklab, var(--primary) 80%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:text-red-600:hover {
      color: var(--color-red-600);
    }
  }

  @media (hover: hover) {
    .hover\:underline:hover {
      text-decoration-line: underline;
    }
  }

  @media (hover: hover) {
    .hover\:opacity-100:hover {
      opacity: 1;
    }
  }

  @media (hover: hover) {
    .hover\:shadow-md:hover {
      --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, #0000001a), 0 2px 4px -2px var(--tw-shadow-color, #0000001a);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }

  @media (hover: hover) {
    .hover\:shadow-sm:hover {
      --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, #0000001a), 0 1px 2px -1px var(--tw-shadow-color, #0000001a);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }

  @media (hover: hover) {
    .hover\:shadow-xl:hover {
      --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, #0000001a), 0 8px 10px -6px var(--tw-shadow-color, #0000001a);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }

  .focus\:bg-accent:focus {
    background-color: var(--accent);
  }

  .focus\:text-accent-foreground:focus {
    color: var(--accent-foreground);
  }

  .focus\:ring-2:focus {
    --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .focus\:ring-primary:focus {
    --tw-ring-color: var(--primary);
  }

  .focus\:ring-ring:focus {
    --tw-ring-color: var(--ring);
  }

  .focus\:ring-offset-2:focus {
    --tw-ring-offset-width: 2px;
    --tw-ring-offset-shadow: var(--tw-ring-inset, ) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  }

  .focus\:outline-hidden:focus {
    --tw-outline-style: none;
    outline-style: none;
  }

  @media (forced-colors: active) {
    .focus\:outline-hidden:focus {
      outline-offset: 2px;
      outline: 2px solid #0000;
    }
  }

  .focus\:outline-none:focus {
    --tw-outline-style: none;
    outline-style: none;
  }

  .focus-visible\:border-ring:focus-visible {
    border-color: var(--ring);
  }

  .focus-visible\:ring-\[3px\]:focus-visible {
    --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .focus-visible\:ring-destructive\/20:focus-visible {
    --tw-ring-color: var(--destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .focus-visible\:ring-destructive\/20:focus-visible {
      --tw-ring-color: color-mix(in oklab, var(--destructive) 20%, transparent);
    }
  }

  .focus-visible\:ring-ring\/50:focus-visible {
    --tw-ring-color: var(--ring);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .focus-visible\:ring-ring\/50:focus-visible {
      --tw-ring-color: color-mix(in oklab, var(--ring) 50%, transparent);
    }
  }

  .focus-visible\:outline-1:focus-visible {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }

  .focus-visible\:outline-ring:focus-visible {
    outline-color: var(--ring);
  }

  .disabled\:pointer-events-none:disabled {
    pointer-events: none;
  }

  .disabled\:cursor-not-allowed:disabled {
    cursor: not-allowed;
  }

  .disabled\:opacity-50:disabled {
    opacity: .5;
  }

  .has-data-\[slot\=card-action\]\:grid-cols-\[1fr_auto\]:has([data-slot="card-action"]) {
    grid-template-columns: 1fr auto;
  }

  .has-\[\>svg\]\:px-2\.5:has( > svg) {
    padding-inline: calc(var(--spacing) * 2.5);
  }

  .has-\[\>svg\]\:px-3:has( > svg) {
    padding-inline: calc(var(--spacing) * 3);
  }

  .has-\[\>svg\]\:px-4:has( > svg) {
    padding-inline: calc(var(--spacing) * 4);
  }

  .aria-invalid\:border-destructive[aria-invalid="true"] {
    border-color: var(--destructive);
  }

  .aria-invalid\:ring-destructive\/20[aria-invalid="true"] {
    --tw-ring-color: var(--destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .aria-invalid\:ring-destructive\/20[aria-invalid="true"] {
      --tw-ring-color: color-mix(in oklab, var(--destructive) 20%, transparent);
    }
  }

  .data-\[disabled\]\:pointer-events-none[data-disabled] {
    pointer-events: none;
  }

  .data-\[disabled\]\:opacity-50[data-disabled] {
    opacity: .5;
  }

  .data-\[inset\]\:pl-8[data-inset] {
    padding-left: calc(var(--spacing) * 8);
  }

  .data-\[placeholder\]\:text-muted-foreground[data-placeholder] {
    color: var(--muted-foreground);
  }

  .data-\[side\=bottom\]\:translate-y-1[data-side="bottom"] {
    --tw-translate-y: calc(var(--spacing) * 1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .data-\[side\=bottom\]\:slide-in-from-top-2[data-side="bottom"] {
    --tw-enter-translate-y: calc(2 * var(--spacing) * -1);
  }

  .data-\[side\=left\]\:-translate-x-1[data-side="left"] {
    --tw-translate-x: calc(var(--spacing) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .data-\[side\=left\]\:slide-in-from-right-2[data-side="left"] {
    --tw-enter-translate-x: calc(2 * var(--spacing));
  }

  .data-\[side\=right\]\:translate-x-1[data-side="right"] {
    --tw-translate-x: calc(var(--spacing) * 1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .data-\[side\=right\]\:slide-in-from-left-2[data-side="right"] {
    --tw-enter-translate-x: calc(2 * var(--spacing) * -1);
  }

  .data-\[side\=top\]\:-translate-y-1[data-side="top"] {
    --tw-translate-y: calc(var(--spacing) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .data-\[side\=top\]\:slide-in-from-bottom-2[data-side="top"] {
    --tw-enter-translate-y: calc(2 * var(--spacing));
  }

  .data-\[size\=default\]\:h-9[data-size="default"] {
    height: calc(var(--spacing) * 9);
  }

  .data-\[size\=sm\]\:h-8[data-size="sm"] {
    height: calc(var(--spacing) * 8);
  }

  :is(.\*\:data-\[slot\=select-value\]\:line-clamp-1 > *)[data-slot="select-value"] {
    -webkit-line-clamp: 1;
    -webkit-box-orient: vertical;
    display: -webkit-box;
    overflow: hidden;
  }

  :is(.\*\:data-\[slot\=select-value\]\:flex > *)[data-slot="select-value"] {
    display: flex;
  }

  :is(.\*\:data-\[slot\=select-value\]\:items-center > *)[data-slot="select-value"] {
    align-items: center;
  }

  :is(.\*\:data-\[slot\=select-value\]\:gap-2 > *)[data-slot="select-value"] {
    gap: calc(var(--spacing) * 2);
  }

  .data-\[state\=active\]\:bg-card[data-state="active"] {
    background-color: var(--card);
  }

  .data-\[state\=checked\]\:border-primary[data-state="checked"] {
    border-color: var(--primary);
  }

  .data-\[state\=checked\]\:bg-primary[data-state="checked"] {
    background-color: var(--primary);
  }

  .data-\[state\=checked\]\:text-primary-foreground[data-state="checked"] {
    color: var(--primary-foreground);
  }

  .data-\[state\=closed\]\:animate-out[data-state="closed"] {
    animation: exit var(--tw-duration, .15s) var(--tw-ease, ease);
  }

  .data-\[state\=closed\]\:fade-out-0[data-state="closed"] {
    --tw-exit-opacity: 0;
  }

  .data-\[state\=closed\]\:zoom-out-95[data-state="closed"] {
    --tw-exit-scale: .95;
  }

  .data-\[state\=open\]\:animate-in[data-state="open"] {
    animation: enter var(--tw-duration, .15s) var(--tw-ease, ease);
  }

  .data-\[state\=open\]\:bg-accent[data-state="open"] {
    background-color: var(--accent);
  }

  .data-\[state\=open\]\:text-accent-foreground[data-state="open"] {
    color: var(--accent-foreground);
  }

  .data-\[state\=open\]\:text-muted-foreground[data-state="open"] {
    color: var(--muted-foreground);
  }

  .data-\[state\=open\]\:fade-in-0[data-state="open"] {
    --tw-enter-opacity: 0;
  }

  .data-\[state\=open\]\:zoom-in-95[data-state="open"] {
    --tw-enter-scale: .95;
  }

  .data-\[variant\=destructive\]\:text-destructive[data-variant="destructive"] {
    color: var(--destructive);
  }

  .data-\[variant\=destructive\]\:focus\:bg-destructive\/10[data-variant="destructive"]:focus {
    background-color: var(--destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .data-\[variant\=destructive\]\:focus\:bg-destructive\/10[data-variant="destructive"]:focus {
      background-color: color-mix(in oklab, var(--destructive) 10%, transparent);
    }
  }

  .data-\[variant\=destructive\]\:focus\:text-destructive[data-variant="destructive"]:focus {
    color: var(--destructive);
  }

  @media (width >= 40rem) {
    .sm\:max-w-2xl {
      max-width: var(--container-2xl);
    }
  }

  @media (width >= 40rem) {
    .sm\:max-w-lg {
      max-width: var(--container-lg);
    }
  }

  @media (width >= 40rem) {
    .sm\:max-w-md {
      max-width: var(--container-md);
    }
  }

  @media (width >= 40rem) {
    .sm\:flex-row {
      flex-direction: row;
    }
  }

  @media (width >= 40rem) {
    .sm\:justify-end {
      justify-content: flex-end;
    }
  }

  @media (width >= 40rem) {
    .sm\:text-left {
      text-align: left;
    }
  }

  @media (width >= 48rem) {
    .md\:block {
      display: block;
    }
  }

  @media (width >= 48rem) {
    .md\:flex {
      display: flex;
    }
  }

  @media (width >= 48rem) {
    .md\:grid {
      display: grid;
    }
  }

  @media (width >= 48rem) {
    .md\:hidden {
      display: none;
    }
  }

  @media (width >= 48rem) {
    .md\:grid-cols-2 {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }

  @media (width >= 48rem) {
    .md\:grid-cols-3 {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }

  @media (width >= 48rem) {
    .md\:grid-cols-4 {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }

  @media (width >= 48rem) {
    .md\:grid-cols-6 {
      grid-template-columns: repeat(6, minmax(0, 1fr));
    }
  }

  @media (width >= 48rem) {
    .md\:flex-row {
      flex-direction: row;
    }
  }

  @media (width >= 48rem) {
    .md\:items-center {
      align-items: center;
    }
  }

  @media (width >= 48rem) {
    :where(.md\:space-y-0 > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 0) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 0) * calc(1 - var(--tw-space-y-reverse)));
    }
  }

  @media (width >= 48rem) {
    :where(.md\:space-x-8 > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 8) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-x-reverse)));
    }
  }

  @media (width >= 48rem) {
    .md\:text-sm {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
  }

  @media (width >= 64rem) {
    .lg\:col-span-1 {
      grid-column: span 1 / span 1;
    }
  }

  @media (width >= 64rem) {
    .lg\:col-span-2 {
      grid-column: span 2 / span 2;
    }
  }

  @media (width >= 64rem) {
    .lg\:flex {
      display: flex;
    }
  }

  @media (width >= 64rem) {
    .lg\:hidden {
      display: none;
    }
  }

  @media (width >= 64rem) {
    .lg\:grid-cols-2 {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }

  @media (width >= 64rem) {
    .lg\:grid-cols-3 {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }

  @media (width >= 64rem) {
    .lg\:grid-cols-4 {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }

  @media (width >= 64rem) {
    .lg\:items-start {
      align-items: flex-start;
    }
  }

  @media (width >= 64rem) {
    .lg\:text-left {
      text-align: left;
    }
  }

  @media (width >= 64rem) {
    .lg\:text-7xl {
      font-size: var(--text-7xl);
      line-height: var(--tw-leading, var(--text-7xl--line-height));
    }
  }

  .dark\:border-input:is(.dark *) {
    border-color: var(--input);
  }

  .dark\:bg-destructive\/60:is(.dark *) {
    background-color: var(--destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-destructive\/60:is(.dark *) {
      background-color: color-mix(in oklab, var(--destructive) 60%, transparent);
    }
  }

  .dark\:bg-input\/30:is(.dark *) {
    background-color: var(--input);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-input\/30:is(.dark *) {
      background-color: color-mix(in oklab, var(--input) 30%, transparent);
    }
  }

  .dark\:text-muted-foreground:is(.dark *) {
    color: var(--muted-foreground);
  }

  @media (hover: hover) {
    .dark\:hover\:bg-accent\/50:is(.dark *):hover {
      background-color: var(--accent);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .dark\:hover\:bg-accent\/50:is(.dark *):hover {
        background-color: color-mix(in oklab, var(--accent) 50%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .dark\:hover\:bg-input\/50:is(.dark *):hover {
      background-color: var(--input);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .dark\:hover\:bg-input\/50:is(.dark *):hover {
        background-color: color-mix(in oklab, var(--input) 50%, transparent);
      }
    }
  }

  .dark\:focus-visible\:ring-destructive\/40:is(.dark *):focus-visible {
    --tw-ring-color: var(--destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:focus-visible\:ring-destructive\/40:is(.dark *):focus-visible {
      --tw-ring-color: color-mix(in oklab, var(--destructive) 40%, transparent);
    }
  }

  .dark\:aria-invalid\:ring-destructive\/40:is(.dark *)[aria-invalid="true"] {
    --tw-ring-color: var(--destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:aria-invalid\:ring-destructive\/40:is(.dark *)[aria-invalid="true"] {
      --tw-ring-color: color-mix(in oklab, var(--destructive) 40%, transparent);
    }
  }

  .dark\:data-\[state\=active\]\:border-input:is(.dark *)[data-state="active"] {
    border-color: var(--input);
  }

  .dark\:data-\[state\=active\]\:bg-input\/30:is(.dark *)[data-state="active"] {
    background-color: var(--input);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:data-\[state\=active\]\:bg-input\/30:is(.dark *)[data-state="active"] {
      background-color: color-mix(in oklab, var(--input) 30%, transparent);
    }
  }

  .dark\:data-\[state\=active\]\:text-foreground:is(.dark *)[data-state="active"] {
    color: var(--foreground);
  }

  .dark\:data-\[state\=checked\]\:bg-primary:is(.dark *)[data-state="checked"] {
    background-color: var(--primary);
  }

  .dark\:data-\[variant\=destructive\]\:focus\:bg-destructive\/20:is(.dark *)[data-variant="destructive"]:focus {
    background-color: var(--destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:data-\[variant\=destructive\]\:focus\:bg-destructive\/20:is(.dark *)[data-variant="destructive"]:focus {
      background-color: color-mix(in oklab, var(--destructive) 20%, transparent);
    }
  }

  .\[\&_svg\]\:pointer-events-none svg {
    pointer-events: none;
  }

  .\[\&_svg\]\:shrink-0 svg {
    flex-shrink: 0;
  }

  .\[\&_svg\:not\(\[class\*\=\'size-\'\]\)\]\:size-4 svg:not([class*="size-"]) {
    width: calc(var(--spacing) * 4);
    height: calc(var(--spacing) * 4);
  }

  .\[\&_svg\:not\(\[class\*\=\'text-\'\]\)\]\:text-muted-foreground svg:not([class*="text-"]) {
    color: var(--muted-foreground);
  }

  .\[\.border-b\]\:pb-6.border-b {
    padding-bottom: calc(var(--spacing) * 6);
  }

  .\[\.border-t\]\:pt-6.border-t {
    padding-top: calc(var(--spacing) * 6);
  }

  :is(.\*\:\[span\]\:last\:flex > *):is(span):last-child {
    display: flex;
  }

  :is(.\*\:\[span\]\:last\:items-center > *):is(span):last-child {
    align-items: center;
  }

  :is(.\*\:\[span\]\:last\:gap-2 > *):is(span):last-child {
    gap: calc(var(--spacing) * 2);
  }

  :is(.data-\[variant\=destructive\]\:\*\:\[svg\]\:\!text-destructive[data-variant="destructive"] > *):is(svg) {
    color: var(--destructive) !important;
  }

  .\[\&\:last-child\]\:pb-6:last-child {
    padding-bottom: calc(var(--spacing) * 6);
  }

  .\[\&\>svg\]\:pointer-events-none > svg {
    pointer-events: none;
  }

  .\[\&\>svg\]\:size-3 > svg {
    width: calc(var(--spacing) * 3);
    height: calc(var(--spacing) * 3);
  }

  @media (hover: hover) {
    a.\[a\&\]\:hover\:bg-accent:hover {
      background-color: var(--accent);
    }
  }

  @media (hover: hover) {
    a.\[a\&\]\:hover\:bg-destructive\/90:hover {
      background-color: var(--destructive);
    }

    @supports (color: color-mix(in lab, red, red)) {
      a.\[a\&\]\:hover\:bg-destructive\/90:hover {
        background-color: color-mix(in oklab, var(--destructive) 90%, transparent);
      }
    }
  }

  @media (hover: hover) {
    a.\[a\&\]\:hover\:bg-primary\/90:hover {
      background-color: var(--primary);
    }

    @supports (color: color-mix(in lab, red, red)) {
      a.\[a\&\]\:hover\:bg-primary\/90:hover {
        background-color: color-mix(in oklab, var(--primary) 90%, transparent);
      }
    }
  }

  @media (hover: hover) {
    a.\[a\&\]\:hover\:bg-secondary\/90:hover {
      background-color: var(--secondary);
    }

    @supports (color: color-mix(in lab, red, red)) {
      a.\[a\&\]\:hover\:bg-secondary\/90:hover {
        background-color: color-mix(in oklab, var(--secondary) 90%, transparent);
      }
    }
  }

  @media (hover: hover) {
    a.\[a\&\]\:hover\:text-accent-foreground:hover {
      color: var(--accent-foreground);
    }
  }
}

:root {
  --font-size: 16px;
  --background: #f3f2ef;
  --foreground: #333;
  --card: #fff;
  --card-rgb: 255, 255, 255;
  --card-foreground: #333;
  --popover: oklch(1 0 0);
  --popover-foreground: oklch(.145 0 0);
  --primary: #0a66c2;
  --primary-rgb: 10, 102, 194;
  --primary-foreground: oklch(1 0 0);
  --secondary: oklch(.95 .0058 264.53);
  --secondary-foreground: #030213;
  --muted: #ececf0;
  --muted-foreground: #717182;
  --accent: #e9ebef;
  --accent-foreground: #030213;
  --destructive: #d4183d;
  --destructive-foreground: #fff;
  --border: #0000001a;
  --border-rgb: 0, 0, 0;
  --input: transparent;
  --input-background: #f3f3f5;
  --switch-background: #cbced4;
  --font-weight-medium: 500;
  --font-weight-normal: 400;
  --ring: oklch(.708 0 0);
  --chart-1: oklch(.646 .222 41.116);
  --chart-2: oklch(.6 .118 184.704);
  --chart-3: oklch(.398 .07 227.392);
  --chart-4: oklch(.828 .189 84.429);
  --chart-5: oklch(.769 .188 70.08);
  --radius: .625rem;
  --sidebar: oklch(.985 0 0);
  --sidebar-foreground: oklch(.145 0 0);
  --sidebar-primary: #030213;
  --sidebar-primary-foreground: oklch(.985 0 0);
  --sidebar-accent: oklch(.97 0 0);
  --sidebar-accent-foreground: oklch(.205 0 0);
  --sidebar-border: oklch(.922 0 0);
  --sidebar-ring: oklch(.708 0 0);
}

.dark {
  --background: #1a1a1a;
  --foreground: #fff;
  --card: #262626;
  --card-rgb: 38, 38, 38;
  --card-foreground: #fff;
  --popover: #262626;
  --popover-foreground: #fff;
  --primary: #fff;
  --primary-rgb: 255, 255, 255;
  --primary-foreground: #1a1a1a;
  --secondary: #404040;
  --secondary-foreground: #fff;
  --muted: #404040;
  --muted-foreground: #a1a1aa;
  --accent: #404040;
  --accent-foreground: #fff;
  --destructive: #dc2626;
  --destructive-foreground: #fff;
  --border: #404040;
  --border-rgb: 64, 64, 64;
  --input: #404040;
  --input-background: #404040;
  --switch-background: #525252;
  --ring: #a1a1aa;
}

.pink {
  --background: #fdf2f8;
  --foreground: #831843;
  --card: #fff;
  --card-foreground: #831843;
  --popover: #fff;
  --popover-foreground: #831843;
  --primary: #ec4899;
  --primary-foreground: #fff;
  --secondary: #fce7f3;
  --secondary-foreground: #831843;
  --muted: #fce7f3;
  --muted-foreground: #9d174d;
  --accent: #fce7f3;
  --accent-foreground: #831843;
  --destructive: #dc2626;
  --destructive-foreground: #fff;
  --border: #f9a8d4;
  --input: #fce7f3;
  --input-background: #fce7f3;
  --switch-background: #f9a8d4;
  --ring: #ec4899;
}

.blue {
  --background: #eff6ff;
  --foreground: #1e3a8a;
  --card: #fff;
  --card-foreground: #1e3a8a;
  --popover: #fff;
  --popover-foreground: #1e3a8a;
  --primary: #3b82f6;
  --primary-foreground: #fff;
  --secondary: #dbeafe;
  --secondary-foreground: #1e3a8a;
  --muted: #dbeafe;
  --muted-foreground: #1d4ed8;
  --accent: #dbeafe;
  --accent-foreground: #1e3a8a;
  --destructive: #dc2626;
  --destructive-foreground: #fff;
  --border: #93c5fd;
  --input: #dbeafe;
  --input-background: #dbeafe;
  --switch-background: #93c5fd;
  --ring: #3b82f6;
}

.black {
  --background: #000;
  --foreground: #fff;
  --card: #171717;
  --card-foreground: #fff;
  --popover: #171717;
  --popover-foreground: #fff;
  --primary: #fff;
  --primary-foreground: #000;
  --secondary: #262626;
  --secondary-foreground: #fff;
  --muted: #262626;
  --muted-foreground: #a3a3a3;
  --accent: #262626;
  --accent-foreground: #fff;
  --destructive: #ef4444;
  --destructive-foreground: #fff;
  --border: #262626;
  --input: #262626;
  --input-background: #262626;
  --switch-background: #404040;
  --ring: #a3a3a3;
}

.green {
  --background: #f0fdf4;
  --foreground: #14532d;
  --card: #fff;
  --card-foreground: #14532d;
  --popover: #fff;
  --popover-foreground: #14532d;
  --primary: #22c55e;
  --primary-foreground: #fff;
  --secondary: #dcfce7;
  --secondary-foreground: #14532d;
  --muted: #dcfce7;
  --muted-foreground: #15803d;
  --accent: #dcfce7;
  --accent-foreground: #14532d;
  --destructive: #dc2626;
  --destructive-foreground: #fff;
  --border: #86efac;
  --input: #dcfce7;
  --input-background: #dcfce7;
  --switch-background: #86efac;
  --ring: #22c55e;
}

.purple {
  --background: #faf5ff;
  --foreground: #581c87;
  --card: #fff;
  --card-foreground: #581c87;
  --popover: #fff;
  --popover-foreground: #581c87;
  --primary: #a855f7;
  --primary-foreground: #fff;
  --secondary: #f3e8ff;
  --secondary-foreground: #581c87;
  --muted: #f3e8ff;
  --muted-foreground: #7c3aed;
  --accent: #f3e8ff;
  --accent-foreground: #581c87;
  --destructive: #dc2626;
  --destructive-foreground: #fff;
  --border: #c4b5fd;
  --input: #f3e8ff;
  --input-background: #f3e8ff;
  --switch-background: #c4b5fd;
  --ring: #a855f7;
}

.orange {
  --background: #fff7ed;
  --foreground: #9a3412;
  --card: #fff;
  --card-foreground: #9a3412;
  --popover: #fff;
  --popover-foreground: #9a3412;
  --primary: #f97316;
  --primary-foreground: #fff;
  --secondary: #fed7aa;
  --secondary-foreground: #9a3412;
  --muted: #fed7aa;
  --muted-foreground: #ea580c;
  --accent: #fed7aa;
  --accent-foreground: #9a3412;
  --destructive: #dc2626;
  --destructive-foreground: #fff;
  --border: #fdba74;
  --input: #fed7aa;
  --input-background: #fed7aa;
  --switch-background: #fdba74;
  --ring: #f97316;
}

html {
  font-size: var(--font-size);
}

.glass-effect {
  -webkit-backdrop-filter: blur(10px);
  backdrop-filter: blur(10px);
  background: #ffffff80;
  border: 1px solid #0000001a;
}

.dark .glass-effect, .black .glass-effect {
  -webkit-backdrop-filter: blur(10px);
  backdrop-filter: blur(10px);
  background: #0000004d;
  border: 1px solid #ffffff1a;
}

.text-gradient {
  background: linear-gradient(135deg, var(--primary), var(--accent));
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

.card-hover {
  transition: all .2s ease-in-out;
}

.card-hover:hover {
  transform: translateY(-2px);
  box-shadow: 0 8px 25px #0000001a;
}

.dark .card-hover:hover, .black .card-hover:hover {
  box-shadow: 0 8px 25px #ffffff1a;
}

[data-radix-popper-content-wrapper], [data-slot="dropdown-menu-content"] {
  z-index: 9999 !important;
}


.pixel-text {
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: none;
  image-rendering: pixelated;
  font-family: "Press Start 2P", cursive;
}

.neon-text-cyan {
  color: #00f6ff;
  text-shadow: 0 0 5px #00f6ff, 0 0 10px #00f6ff, 0 0 20px #00f6ff, 0 0 40px #00a6cc;
}

.neon-text-magenta {
  color: #f0f;
  text-shadow: 0 0 5px #f0f, 0 0 10px #f0f, 0 0 20px #f0f, 0 0 40px #c0c;
}

.neon-text-yellow {
  color: #ff0;
  text-shadow: 0 0 5px #ff0, 0 0 10px #ff0, 0 0 20px #ff0, 0 0 40px #cc0;
}

.neon-border-cyan {
  border: 3px solid #00f6ff;
  box-shadow: 0 0 5px #00f6ff, 0 0 10px #00f6ff, 0 0 20px #00f6ff, inset 0 0 5px #00f6ff, inset 0 0 10px #00f6ff;
}

.neon-border-magenta {
  border: 3px solid #f0f;
  box-shadow: 0 0 5px #f0f, 0 0 10px #f0f, 0 0 20px #f0f, inset 0 0 5px #f0f, inset 0 0 10px #f0f;
}

.neon-border-yellow {
  border: 2px solid #ff0;
  box-shadow: 0 0 5px #ff0, 0 0 10px #ff0;
}

.neon-button-cyan {
  color: #00f6ff;
  background: #00f6ff1a;
  border: 2px solid #00f6ff;
  transition: all .3s;
  box-shadow: 0 0 5px #00f6ff, 0 0 10px #00f6ff, inset 0 0 5px #00f6ff;
}

.neon-button-cyan:hover {
  background: #00f6ff33;
  box-shadow: 0 0 10px #00f6ff, 0 0 20px #00f6ff, 0 0 30px #00f6ff, inset 0 0 10px #00f6ff;
}

.neon-button-magenta {
  color: #f0f;
  background: #ff00ff1a;
  border: 2px solid #f0f;
  transition: all .3s;
  box-shadow: 0 0 5px #f0f, 0 0 10px #f0f, inset 0 0 5px #f0f;
}

.neon-button-magenta:hover:not(:disabled) {
  background: #f0f3;
  box-shadow: 0 0 10px #f0f, 0 0 20px #f0f, 0 0 30px #f0f, inset 0 0 10px #f0f;
}

.crt-screen {
  background: linear-gradient(#12101000 50%, #00000040 50%) 0 0 / 100% 2px, linear-gradient(90deg, #ff00000f, #00ff0005, #0000ff0f) 0 0 / 3px 100%;
  animation: .15s infinite flicker;
}

@keyframes flicker {
  0% {
    opacity: .97;
  }

  5% {
    opacity: 1;
  }

  10% {
    opacity: .97;
  }

  15% {
    opacity: 1;
  }

  20% {
    opacity: .97;
  }

  100% {
    opacity: 1;
  }
}

.scanlines {
  z-index: 1;
  pointer-events: none;
  background: repeating-linear-gradient(0deg, #00000026, #00000026 1px, #0000 1px 2px);
  width: 100%;
  height: 100%;
  position: fixed;
  top: 0;
  left: 0;
}

.crt-grid {
  z-index: 0;
  background-image: linear-gradient(#00f6ff08 1px, #0000 1px), linear-gradient(90deg, #00f6ff08 1px, #0000 1px);
  background-size: 50px 50px;
  width: 100%;
  height: 100%;
  position: fixed;
  top: 0;
  left: 0;
}

.arcade-cabinet {
  width: 100%;
  max-width: 1200px;
}

.arcade-top, .arcade-screen {
  margin-bottom: -2px;
}

.game-card-center {
  min-width: 400px;
  transition: transform .3s;
  transform: scale(1);
}

.game-card-side {
  text-align: center;
  min-width: 200px;
  transition: all .3s;
}

@keyframes blink {
  0%, 49% {
    opacity: 1;
  }

  50%, 100% {
    opacity: .3;
  }
}

.animate-blink {
  animation: 1.5s infinite blink;
}

.animate-pulse-slow {
  animation: 2s cubic-bezier(.4, 0, .6, 1) infinite pulse-slow;
}

@keyframes pulse-slow {
  0%, 100% {
    opacity: 1;
    transform: scale(1);
  }

  50% {
    opacity: .8;
    transform: scale(1.02);
  }
}

@keyframes float {
  0%, 100% {
    transform: translateY(0);
  }

  50% {
    transform: translateY(-10px);
  }
}

.animate-float {
  animation: 3s ease-in-out infinite float;
}

@media (width <= 1024px) {
  .game-card-center {
    min-width: 300px;
  }

  .game-card-side {
    min-width: 150px;
  }

  .pixel-text {
    font-size: .8em;
  }
}

.professional-card {
  border: 1px solid var(--border);
  background: var(--card);
  border-radius: 12px;
  transition: all .3s;
}

.professional-card:hover {
  transform: translateY(-2px);
  box-shadow: 0 4px 20px #00000014;
}

.dark .professional-card:hover, .black .professional-card:hover {
  box-shadow: 0 4px 20px #ffffff0d;
}

.professional-button-primary {
  background: var(--primary);
  color: var(--primary-foreground);
  border: none;
  transition: all .2s;
}

.professional-button-primary:hover {
  opacity: .9;
  transform: translateY(-1px);
  box-shadow: 0 4px 12px #0a66c24d;
}

.professional-button-secondary {
  border: 1px solid var(--border);
  background: var(--card);
  color: var(--foreground);
  transition: all .2s;
}

.professional-button-secondary:hover {
  background: var(--muted);
  border-color: var(--primary);
}

.professional-input {
  border: 1px solid var(--border);
  background: var(--card);
  transition: all .2s;
}

.professional-input:focus {
  border-color: var(--primary);
  box-shadow: 0 0 0 3px #0a66c21a;
}

.professional-badge-prize {
  color: #fff;
  background: #10b981;
  font-weight: 600;
}

.professional-badge-mode {
  background: var(--primary);
  color: #fff;
  font-weight: 600;
}

.professional-badge-participants {
  background: var(--muted);
  color: var(--muted-foreground);
  border: 1px solid var(--border);
}

.professional-tabs {
  background: var(--card);
  border: 1px solid var(--border);
  border-radius: 12px;
  padding: 4px;
}

.professional-tab {
  border-radius: 8px;
  transition: all .2s;
}

.professional-tab[data-state="active"] {
  background: var(--primary);
  color: var(--primary-foreground);
}

.professional-tab:not([data-state="active"]):hover {
  background: var(--muted);
}

.emoji-background {
  pointer-events: none;
  z-index: 0;
  width: 100%;
  height: 100%;
  position: fixed;
  top: 0;
  left: 0;
  overflow: hidden;
}

.falling-emoji {
  opacity: .2;
  filter: brightness(1.2) saturate(1.1);
  font-size: 2rem;
  animation: linear infinite continuousFall;
  position: absolute;
}

@keyframes continuousFall {
  0% {
    opacity: 0;
    transform: translateY(-10vh)translateX(0)rotate(0);
  }

  5% {
    opacity: .2;
  }

  50% {
    transform: translateY(50vh) translateX(var(--drift, 0px)) rotate(180deg);
    opacity: .2;
  }

  95% {
    opacity: .2;
  }

  100% {
    transform: translateY(110vh) translateX(var(--drift, 0px)) rotate(360deg);
    opacity: 0;
  }
}

.dark .falling-emoji, .black .falling-emoji {
  opacity: .4;
  filter: brightness(1.8) saturate(1.5) contrast(1.2);
  text-shadow: 0 0 8px #ffffff4d;
}

.dark .falling-emoji {
  filter: brightness(2) saturate(1.6) contrast(1.3);
}

.emoji-stream-1 {
  animation-delay: 0s;
}

.emoji-stream-2 {
  animation-delay: .5s;
}

.emoji-stream-3 {
  animation-delay: 1s;
}

.emoji-stream-4 {
  animation-delay: 1.5s;
}

.emoji-stream-5 {
  animation-delay: 2s;
}

.emoji-stream-6 {
  animation-delay: 2.5s;
}

.emoji-stream-7 {
  animation-delay: 3s;
}

.emoji-stream-8 {
  animation-delay: 3.5s;
}

.emoji-stream-9 {
  animation-delay: 4s;
}

.emoji-stream-10 {
  animation-delay: 4.5s;
}

.professional-landing {
  background: linear-gradient(135deg, #fff 0%, #f8fafc 50%, #fff 100%);
  position: relative;
}

.landing-grid-background {
  z-index: 0;
  background-image: linear-gradient(#0a66c205 1px, #0000 1px), linear-gradient(90deg, #0a66c205 1px, #0000 1px);
  background-size: 80px 80px;
  width: 100%;
  height: 100%;
  position: fixed;
  top: 0;
  left: 0;
}

.landing-gradient-overlay {
  z-index: 1;
  pointer-events: none;
  background: radial-gradient(circle at 20%, #0a66c208 0%, #0000 50%), radial-gradient(circle at 80%, #0a66c208 0%, #0000 50%);
  width: 100%;
  height: 100%;
  position: fixed;
  top: 0;
  left: 0;
}

.landing-dots-container {
  z-index: 1;
  pointer-events: none;
  width: 100%;
  height: 100%;
  position: fixed;
  top: 0;
  left: 0;
  overflow: hidden;
}

.landing-dot {
  opacity: 0;
  background: #0a66c2;
  border-radius: 50%;
  width: 4px;
  height: 4px;
  animation: 6s ease-in-out infinite floatDot;
  position: absolute;
}

@keyframes floatDot {
  0%, 100% {
    opacity: 0;
    transform: translateY(0)scale(.8);
  }

  50% {
    opacity: .15;
    transform: translateY(-30px)scale(1);
  }
}

.professional-title {
  color: #1a1a1a;
  letter-spacing: -.02em;
  font-weight: 700;
  animation: .8s ease-out fadeInUp;
}

.professional-subtitle {
  font-weight: 500;
  animation: .8s ease-out .2s backwards fadeInUp;
}

.logo-professional {
  animation: .8s ease-out fadeInUp;
}

.hover-lift {
  transition: transform .3s;
}

.hover-lift:hover {
  transform: translateY(-8px);
}

.professional-feature-card {
  background: #fff;
  border: 1px solid #0a66c21a;
  border-radius: 16px;
  padding: 2rem;
  transition: all .3s;
  animation: .8s ease-out backwards fadeInRight;
  box-shadow: 0 2px 8px #0000000a;
}

.professional-feature-card:hover {
  border-color: #0a66c24d;
  transform: translateY(-4px);
  box-shadow: 0 8px 24px #0a66c21f;
}

@keyframes fadeInRight {
  from {
    opacity: 0;
    transform: translateX(30px);
  }

  to {
    opacity: 1;
    transform: translateX(0);
  }
}

.professional-feature-icon {
  background: linear-gradient(135deg, #e3f2fd 0%, #bbdefb 100%);
  border-radius: 12px;
  flex-shrink: 0;
  justify-content: center;
  align-items: center;
  width: 64px;
  height: 64px;
  display: flex;
}

.professional-button-cta {
  color: #fff;
  background: linear-gradient(135deg, #0a66c2 0%, #004182 100%);
  border: none;
  font-weight: 600;
  transition: all .3s;
  position: relative;
  overflow: hidden;
  box-shadow: 0 4px 14px #0a66c240;
}

.professional-button-cta:before {
  content: "";
  background: linear-gradient(90deg, #0000, #fff3, #0000);
  width: 100%;
  height: 100%;
  transition: left .6s;
  position: absolute;
  top: 0;
  left: -100%;
}

.professional-button-cta:hover:before {
  left: 100%;
}

.professional-button-cta:hover {
  transform: translateY(-2px);
  box-shadow: 0 6px 20px #0a66c259;
}

.professional-cta {
  animation: .8s ease-out .4s backwards fadeInUp;
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }

  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@media (width <= 1024px) {
  .professional-title {
    font-size: 3rem;
  }

  .professional-feature-card {
    padding: 1.5rem;
  }

  .professional-feature-icon {
    width: 56px;
    height: 56px;
  }
}

.cyber-button-primary {
  color: #000;
  background: linear-gradient(135deg, #0ff 0%, #1e90ff 100%);
  border: none;
  transition: all .3s;
  position: relative;
  overflow: hidden;
  box-shadow: 0 0 20px #0ff6, 0 4px 15px #0000004d;
}

.cyber-button-primary:before {
  content: "";
  background: linear-gradient(90deg, #0000, #ffffff4d, #0000);
  width: 100%;
  height: 100%;
  transition: left .5s;
  position: absolute;
  top: 0;
  left: -100%;
}

.cyber-button-primary:hover:before {
  left: 100%;
}

.cyber-button-primary:hover {
  transform: translateY(-2px);
  box-shadow: 0 0 30px #0ff9, 0 6px 20px #0006;
}

.futuristic-login {
  background: #000;
}

.login-wave-grid {
  z-index: 0;
  background-image: linear-gradient(#1e90ff08 1px, #0000 1px), linear-gradient(90deg, #1e90ff08 1px, #0000 1px);
  background-size: 80px 80px;
  width: 100%;
  height: 100%;
  position: fixed;
  top: 0;
  left: 0;
}

.login-cyber-grid {
  background-image: linear-gradient(#00ffff1a 1px, #0000 1px), linear-gradient(90deg, #00ffff1a 1px, #0000 1px);
  background-size: 50px 50px;
  width: 100%;
  height: 100%;
  animation: 4s ease-in-out infinite gridPulse;
  position: absolute;
  top: 0;
  left: 0;
}

@keyframes gridPulse {
  0%, 100% {
    opacity: .3;
  }

  50% {
    opacity: .6;
  }
}

.wave-container {
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
  overflow: hidden;
}

.cyber-wave {
  border: 2px solid #0ff3;
  border-radius: 45%;
  width: 200%;
  height: 200%;
  animation: 10s linear infinite wave;
  position: absolute;
}

.wave-1 {
  top: -50%;
  left: -50%;
}

.wave-2 {
  border-color: #a020f033;
  animation-delay: 2s;
  top: -50%;
  left: -50%;
}

.wave-3 {
  border-color: #1e90ff33;
  animation-delay: 4s;
  top: -50%;
  left: -50%;
}

@keyframes wave {
  0% {
    transform: rotate(0);
  }

  100% {
    transform: rotate(360deg);
  }
}

.login-card {
  -webkit-backdrop-filter: blur(20px);
  backdrop-filter: blur(20px);
  background: #111c;
  border: 1px solid #0ff3;
  border-radius: 16px;
  box-shadow: 0 0 40px #00ffff1a, 0 8px 32px #00000080;
}

.cyber-button-github {
  color: #fff;
  background: #24292e;
  border: 1px solid #ffffff1a;
  transition: all .3s;
}

.cyber-button-github:hover {
  background: #2f363d;
  border-color: #00ffff80;
  box-shadow: 0 0 20px #0ff3;
}

.cyber-button-linkedin {
  color: #fff;
  background: #0a66c2;
  border: 1px solid #ffffff1a;
  transition: all .3s;
}

.cyber-button-linkedin:hover {
  background: #004182;
  border-color: #00ffff80;
  box-shadow: 0 0 20px #0a66c266;
}

.slide-in-down {
  animation: .4s ease-out slideInDown;
}

@keyframes slideInDown {
  from {
    opacity: 0;
    transform: translateY(-20px);
  }

  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.cyber-link-underline {
  position: relative;
}

.cyber-link-underline:after {
  content: "";
  background: linear-gradient(90deg, #0ff, #1e90ff);
  width: 0;
  height: 2px;
  transition: width .3s;
  position: absolute;
  bottom: -2px;
  left: 0;
}

.cyber-link-underline:hover:after {
  width: 100%;
}

.cyber-checkbox {
  border: 2px solid #00ffff80;
}

.cyber-checkbox[data-state="checked"] {
  background: linear-gradient(135deg, #0ff, #1e90ff);
}

.survey-grid-background {
  z-index: 0;
  background-image: linear-gradient(#a020f00d 1px, #0000 1px), linear-gradient(90deg, #a020f00d 1px, #0000 1px);
  background-size: 60px 60px;
  width: 100%;
  height: 100%;
  animation: 15s linear infinite gridMove;
  position: fixed;
  top: 0;
  left: 0;
}

.survey-card {
  -webkit-backdrop-filter: blur(20px);
  backdrop-filter: blur(20px);
  background: #111111e6;
  border: 1px solid #00ffff4d;
  border-radius: 20px;
  box-shadow: 0 0 50px #00ffff26, 0 10px 40px #0009;
}

.survey-step {
  animation: .5s ease-out slideIn;
}

@keyframes slideIn {
  from {
    opacity: 0;
    transform: translateX(30px);
  }

  to {
    opacity: 1;
    transform: translateX(0);
  }
}

.progress-dot {
  border-radius: 50%;
  justify-content: center;
  align-items: center;
  width: 40px;
  height: 40px;
  font-weight: 600;
  transition: all .3s;
  display: flex;
}

.progress-dot-inactive {
  color: #666;
  background: #ffffff1a;
  border: 2px solid #333;
}

.progress-dot-active {
  color: #000;
  background: linear-gradient(135deg, #0ff, #1e90ff);
  animation: 2s ease-in-out infinite pulse;
  box-shadow: 0 0 20px #00ffff80;
}

.progress-dot-completed {
  color: #fff;
  background: #10b981;
  border: 2px solid #10b981;
}

.progress-line {
  background: #333;
  width: 60px;
  height: 2px;
  transition: all .3s;
}

.progress-line-completed {
  background: linear-gradient(90deg, #10b981, #0ff);
}

.cyber-input {
  color: #fff;
  background: #00000080;
  border: 1px solid #00ffff4d;
  transition: all .3s;
}

.cyber-input:focus {
  background: #000000b3;
  border-color: #0ff;
  box-shadow: 0 0 15px #00ffff4d, 0 0 30px #00ffff1a;
}

.cyber-input::placeholder {
  color: #ffffff4d;
}

.profile-upload-container {
  max-width: 300px;
  margin: 0 auto;
}

.profile-upload-label {
  background: #0000004d;
  border: 2px dashed #00ffff4d;
  border-radius: 16px;
  padding: 3rem;
  transition: all .3s;
  display: block;
}

.profile-upload-label:hover {
  background: #00ffff0d;
  border-color: #0ff;
  box-shadow: 0 0 30px #0ff3;
}

.cyber-button-secondary {
  color: #0ff;
  background: none;
  border: 1px solid #00ffff80;
  transition: all .3s;
}

.cyber-button-secondary:hover {
  background: #00ffff1a;
  border-color: #0ff;
  box-shadow: 0 0 15px #00ffff4d;
}

.confetti-container {
  pointer-events: none;
  z-index: 100;
  width: 100%;
  height: 100%;
  position: fixed;
  top: 0;
  left: 0;
}

.confetti-particle {
  width: 10px;
  height: 10px;
  animation: 3s linear forwards confettiFall;
  position: absolute;
  top: -10px;
}

@keyframes confettiFall {
  to {
    opacity: 0;
    transform: translateY(100vh)rotate(360deg);
  }
}

.success-checkmark {
  animation: .5s ease-out scaleIn;
}

@keyframes scaleIn {
  from {
    opacity: 0;
    transform: scale(0);
  }

  to {
    opacity: 1;
    transform: scale(1);
  }
}

.checkmark-circle {
  stroke: #0ff;
  stroke-width: 2px;
  stroke-dasharray: 166;
  stroke-dashoffset: 166px;
  animation: .6s cubic-bezier(.65, 0, .45, 1) forwards strokeCircle;
}

@keyframes strokeCircle {
  to {
    stroke-dashoffset: 0;
  }
}

.checkmark-check {
  stroke: #0ff;
  stroke-width: 3px;
  stroke-linecap: round;
  stroke-dasharray: 48;
  stroke-dashoffset: 48px;
  animation: .3s cubic-bezier(.65, 0, .45, 1) .6s forwards strokeCheck;
}

@keyframes strokeCheck {
  to {
    stroke-dashoffset: 0;
  }
}

@keyframes pulse {
  50% {
    opacity: .5;
  }
}

.sticky-card {
  border: 1px solid var(--border);
  transition: all .3s;
  position: relative;
  box-shadow: 0 4px 20px #0000000d;
}

nav {
  z-index: 100;
  position: relative;
}

.dark .sticky-card, .black .sticky-card {
  box-shadow: 0 4px 20px #ffffff0d;
}

.sticky-card:hover {
  transform: translateY(-2px);
  box-shadow: 0 8px 30px #0000001a;
}

.dark .sticky-card:hover, .black .sticky-card:hover {
  box-shadow: 0 8px 30px #ffffff1a;
}

.scrollable-feed {
  position: relative;
}

.feed-post-card {
  border: 1px solid var(--border);
  transition: all .3s;
}

.feed-post-card:hover {
  border-color: var(--primary);
  transform: translateY(-4px);
  box-shadow: 0 8px 25px #00000014;
}

.dark .feed-post-card:hover, .black .feed-post-card:hover {
  box-shadow: 0 8px 25px #ffffff14;
}

.feed-post-card.first-post {
  background: rgba(var(--card-rgb, 255, 255, 255), .75);
  -webkit-backdrop-filter: blur(12px);
  backdrop-filter: blur(12px);
  border: 1px solid rgba(var(--border-rgb, 0, 0, 0), .3);
  z-index: 15;
  position: relative;
}

.feed-post-card.first-post:before {
  content: "";
  background: linear-gradient(135deg, rgba(var(--primary-rgb, 10, 102, 194), .05) 0%, transparent 100%);
  border-radius: inherit;
  z-index: -1;
  position: absolute;
  inset: 0;
}

.dark .feed-post-card.first-post, .black .feed-post-card.first-post {
  -webkit-backdrop-filter: blur(12px);
  backdrop-filter: blur(12px);
  background: #262626bf;
  border: 1px solid #ffffff26;
}

.scrollable-feed {
  scroll-behavior: smooth;
}

.feed-post-card button {
  transition: all .2s;
}

.feed-post-card button:hover {
  transform: translateY(-1px);
}

.sticky-card .w-20.h-20 {
  transition: transform .3s;
}

.sticky-card:hover .w-20.h-20 {
  transform: scale(1.05);
}

.sticky-card .space-y-3 > div:hover {
  transform: translateX(4px);
}

.acta-card {
  background: linear-gradient(135deg, #fbbf24 0%, #f59e0b 50%, #d97706 100%);
  border: 4px solid #fbbf24;
  transition: all .3s;
  position: relative;
  box-shadow: 0 4px 20px #0000004d, inset 0 2px 4px #fff3;
}

.acta-card:before {
  content: "";
  pointer-events: none;
  background: linear-gradient(135deg, #ffffff4d 0%, #0000 50%);
  border-radius: 4px;
  position: absolute;
  inset: 2px;
}

.acta-card:hover {
  transform: scale(1.05)rotateY(5deg);
  box-shadow: 0 8px 30px #fbbf2480, inset 0 2px 4px #ffffff4d;
}

.acta-card.dragging {
  filter: brightness(1.2);
  transform: scale(.95)rotate(5deg);
  box-shadow: 0 0 30px #fbbf24cc;
}

.card-slot {
  background: radial-gradient(circle, #000c 0%, #0006 100%);
  border-radius: 12px;
  transition: all .3s;
  position: relative;
}

.card-slot.empty {
  background: #1119;
  border-color: #4b5563;
}

.card-slot.hovering {
  background: #fbbf241a;
  border-color: #fbbf24;
  animation: 1.5s ease-in-out infinite pulse-glow;
  box-shadow: 0 0 20px #fbbf244d, inset 0 0 20px #fbbf241a;
}

.card-slot.filled {
  background: #10b98133;
  border-color: #10b981;
  box-shadow: 0 0 25px #10b98166, inset 0 0 15px #10b98133;
}

@keyframes pulse-glow {
  0%, 100% {
    box-shadow: 0 0 20px #fbbf244d, inset 0 0 20px #fbbf241a;
  }

  50% {
    box-shadow: 0 0 30px #fbbf2480, inset 0 0 25px #fbbf2433;
  }
}

.screen-locked {
  position: relative;
}

.screen-locked:after {
  content: "";
  border-radius: inherit;
  background: repeating-linear-gradient(45deg, #dc267f1a 0 2px, #0000 2px 8px);
  animation: 2s linear infinite security-pattern;
  position: absolute;
  inset: 0;
}

@keyframes security-pattern {
  0% {
    transform: translateX(0);
  }

  100% {
    transform: translateX(10px);
  }
}

.power-button-locked {
  background: #dc2626;
  animation: 2s ease-in-out infinite power-pulse-red;
  box-shadow: 0 0 10px #dc262680, inset 0 1px 2px #fff3;
}

.power-button-unlocked {
  background: #10b981;
  animation: 2s ease-in-out infinite power-pulse-green;
  box-shadow: 0 0 10px #10b98180, inset 0 1px 2px #fff3;
}

@keyframes power-pulse-red {
  0%, 100% {
    opacity: 1;
  }

  50% {
    opacity: .6;
  }
}

@keyframes power-pulse-green {
  0%, 100% {
    opacity: 1;
  }

  50% {
    opacity: .8;
  }
}

.auth-success {
  animation: .8s ease-out auth-glow;
}

@keyframes auth-glow {
  0% {
    box-shadow: 0 0 #10b98100;
  }

  50% {
    box-shadow: 0 0 40px #10b98199;
  }

  100% {
    box-shadow: 0 0 20px #10b9814d;
  }
}

.drag-preview {
  filter: brightness(1.2) saturate(1.3);
  transform: rotate(5deg)scale(1.1);
  box-shadow: 0 10px 40px #fbbf2499;
}

.instruction-panel {
  background: linear-gradient(135deg, #fef3c7 0%, #fde68a 100%);
  border: 2px solid #f59e0b;
  border-radius: 12px;
  transition: all .3s;
  box-shadow: 0 4px 15px #0000001a;
}

.instruction-panel:hover {
  transform: translateY(-2px);
  box-shadow: 0 8px 25px #00000026;
}

.retro-computer-container {
  filter: drop-shadow(0 0 20px #0000004d);
}

.computer-screen-glow {
  pointer-events: none;
  border-radius: 8px;
  position: absolute;
  inset: 8% 8% 15%;
  box-shadow: 0 0 30px #00ff001a, inset 0 0 30px #00ff000d;
}

.auth-process {
  animation: 2s ease-in-out auth-sequence;
}

@keyframes auth-sequence {
  0% {
    opacity: 0;
    transform: translateY(20px);
  }

  20% {
    opacity: 1;
    transform: translateY(0);
  }

  80% {
    opacity: 1;
    transform: translateY(0);
  }

  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

.neon-border-green {
  border: 3px solid #10b981;
  animation: 2s ease-in-out infinite alternate neon-pulse-green;
  box-shadow: 0 0 10px #10b981, 0 0 20px #10b981, 0 0 30px #10b981, inset 0 0 10px #10b981, inset 0 0 20px #10b981;
}

.neon-border-yellow {
  border: 3px solid #fbbf24;
  animation: 2s ease-in-out infinite alternate neon-pulse-yellow;
  box-shadow: 0 0 10px #fbbf24, 0 0 20px #fbbf24, 0 0 30px #fbbf24, inset 0 0 10px #fbbf24, inset 0 0 20px #fbbf24;
}

@keyframes neon-pulse-green {
  0% {
    box-shadow: 0 0 10px #10b981, 0 0 20px #10b981, 0 0 30px #10b981, inset 0 0 10px #10b981;
  }

  100% {
    box-shadow: 0 0 15px #10b981, 0 0 25px #10b981, 0 0 40px #10b981, inset 0 0 15px #10b981;
  }
}

@keyframes neon-pulse-yellow {
  0% {
    box-shadow: 0 0 10px #fbbf24, 0 0 20px #fbbf24, 0 0 30px #fbbf24, inset 0 0 10px #fbbf24;
  }

  100% {
    box-shadow: 0 0 15px #fbbf24, 0 0 25px #fbbf24, 0 0 40px #fbbf24, inset 0 0 15px #fbbf24;
  }
}

.coin-slot-container {
  background: linear-gradient(145deg, #2d3748, #1a202c);
  border: 4px solid #4a5568;
  box-shadow: inset 0 4px 8px #0000004d, 0 4px 20px #00000080;
}

.coin-slot-inner {
  background: radial-gradient(#000 0%, #1a1a1a 100%);
  box-shadow: inset 0 0 20px #000c, 0 0 20px #fbbf244d;
}

.coin-slot-inner.active {
  box-shadow: inset 0 0 20px #10b9814d, 0 0 30px #10b98180;
}

.card-insert-animation {
  animation: .8s ease-out cardInsert;
}

@keyframes cardInsert {
  0% {
    opacity: 0;
    transform: translateY(-100px)scale(.8);
  }

  50% {
    opacity: 1;
    transform: translateY(0)scale(1.1);
  }

  100% {
    opacity: 1;
    transform: translateY(0)scale(1);
  }
}

.retro-title {
  text-shadow: 2px 2px #000, 4px 4px #00000080;
  font-family: "Press Start 2P", monospace;
  animation: 3s ease-in-out infinite alternate titleGlow;
}

@keyframes titleGlow {
  0% {
    text-shadow: 2px 2px #000, 4px 4px #00000080;
  }

  100% {
    text-shadow: 2px 2px #000, 4px 4px #00000080, 0 0 20px;
  }
}

.game-button-locked {
  color: #9ca3af;
  cursor: not-allowed;
  background: linear-gradient(135deg, #374151, #1f2937);
  border: 2px solid #6b7280;
  box-shadow: inset 0 2px 4px #0000004d;
}

.game-button-active {
  color: #000;
  cursor: pointer;
  background: linear-gradient(135deg, #10b981, #059669);
  border: 2px solid #34d399;
  animation: 2s ease-in-out infinite buttonPulse;
  box-shadow: 0 0 20px #10b98180, inset 0 1px 2px #fff3;
}

@keyframes buttonPulse {
  0%, 100% {
    box-shadow: 0 0 20px #10b98180, inset 0 1px 2px #fff3;
  }

  50% {
    box-shadow: 0 0 30px #10b981cc, inset 0 1px 2px #ffffff4d;
  }
}

.direction-arrow {
  animation: 2s ease-in-out infinite arrowBounce;
}

@keyframes arrowBounce {
  0%, 20%, 50%, 80%, 100% {
    transform: translateX(0);
  }

  40% {
    transform: translateX(10px);
  }

  60% {
    transform: translateX(5px);
  }
}

.status-indicator-locked {
  color: #ef4444;
  animation: 1.5s ease-in-out infinite statusBlink;
}

.status-indicator-unlocked {
  color: #10b981;
  animation: 2s ease-in-out infinite alternate statusGlow;
}

@keyframes statusBlink {
  0%, 50% {
    opacity: 1;
  }

  51%, 100% {
    opacity: .3;
  }
}

@keyframes statusGlow {
  0% {
    text-shadow: 0 0 5px;
    transform: scale(1);
  }

  100% {
    text-shadow: 0 0 20px;
    transform: scale(1.05);
  }
}

.game-selection-card {
  cursor: pointer;
  background: #0006;
  border: 2px solid;
  border-radius: 12px;
  transition: all .3s;
  position: relative;
  overflow: hidden;
}

.game-selection-card:before {
  content: "";
  background: linear-gradient(90deg, #0000, #ffffff1a, #0000);
  width: 100%;
  height: 100%;
  transition: left .6s;
  position: absolute;
  top: 0;
  left: -100%;
}

.game-selection-card:hover:before {
  left: 100%;
}

.game-selection-card:hover {
  transform: scale(1.05)translateY(-4px);
  box-shadow: 0 10px 30px #00000080;
}

.game-selection-card.cyan {
  background: #00f6ff1a;
  border-color: #00f6ff;
}

.game-selection-card.cyan:hover {
  box-shadow: 0 0 30px #00f6ff66;
}

.game-selection-card.purple {
  background: #a855f71a;
  border-color: #a855f7;
}

.game-selection-card.purple:hover {
  box-shadow: 0 0 30px #a855f766;
}

.snake-board {
  background: #000;
  border: 2px solid #10b981;
  position: relative;
}

.snake-segment {
  background: #10b981;
  border-radius: 2px;
  position: absolute;
}

.snake-head {
  background: #34d399;
  border: 1px solid #10b981;
}

.snake-food {
  background: #ef4444;
  border-radius: 50%;
  animation: 1s ease-in-out infinite foodPulse;
}

@keyframes foodPulse {
  0%, 100% {
    opacity: 1;
    transform: scale(1);
  }

  50% {
    opacity: .8;
    transform: scale(1.2);
  }
}

.pong-board {
  background: #000;
  border: 2px solid #00f6ff;
  position: relative;
}

.pong-paddle {
  background: #00f6ff;
  box-shadow: 0 0 10px #00f6ff;
}

.pong-ball {
  background: #fff;
  border-radius: 50%;
  box-shadow: 0 0 10px #fff;
}

.pong-center-line {
  opacity: .3;
  background: #00f6ff;
  width: 2px;
}

.arcade-screen-border {
  position: relative;
}

.arcade-screen-border:after {
  content: "";
  border-radius: inherit;
  z-index: -1;
  background: linear-gradient(45deg, #00f6ff, #a855f7, #00f6ff) 0 0 / 400% 400%;
  animation: 3s ease-in-out infinite borderGlow;
  position: absolute;
  inset: -2px;
}

@keyframes borderGlow {
  0%, 100% {
    background-position: 0%;
  }

  50% {
    background-position: 100%;
  }
}

.game-card-enhanced {
  -webkit-backdrop-filter: blur(10px);
  backdrop-filter: blur(10px);
  background: linear-gradient(135deg, #0009, #0000004d) padding-box padding-box;
  border: 2px solid #0000;
  position: relative;
}

.game-card-enhanced:before {
  content: "";
  border-radius: inherit;
  z-index: -1;
  background: linear-gradient(135deg, #00f6ff, #a855f7);
  padding: 2px;
  position: absolute;
  inset: 0;
  mask-image: linear-gradient(#fff 0 0), linear-gradient(#fff 0 0);
  mask-position: 0 0, 0 0;
  mask-size: auto, auto;
  mask-repeat: repeat, repeat;
  mask-clip: content-box, border-box;
  mask-origin: content-box, border-box;
  mask-composite: exclude;
  mask-mode: match-source, match-source;
}

.difficulty-easy {
  color: #fff;
  background: linear-gradient(135deg, #10b981, #059669);
  border-radius: 4px;
  padding: 2px 8px;
  font-size: 10px;
  font-weight: bold;
}

.difficulty-medium {
  color: #fff;
  background: linear-gradient(135deg, #f59e0b, #d97706);
  border-radius: 4px;
  padding: 2px 8px;
  font-size: 10px;
  font-weight: bold;
}

.difficulty-hard {
  color: #fff;
  background: linear-gradient(135deg, #ef4444, #dc2626);
  border-radius: 4px;
  padding: 2px 8px;
  font-size: 10px;
  font-weight: bold;
}

.games-grid {
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: 1rem;
  padding: 1rem;
  display: grid;
}

.coming-soon {
  animation: 2s ease-in-out infinite comingSoonPulse;
}

@keyframes comingSoonPulse {
  0%, 100% {
    opacity: .7;
    transform: scale(1);
  }

  50% {
    opacity: 1;
    transform: scale(1.05);
  }
}

.game-selection-scrollbar::-webkit-scrollbar {
  width: 8px;
}

.game-selection-scrollbar::-webkit-scrollbar-track {
  background: #0000004d;
  border-radius: 4px;
}

.game-selection-scrollbar::-webkit-scrollbar-thumb {
  background: linear-gradient(135deg, #00f6ff, #a855f7);
  border-radius: 4px;
}

.game-selection-scrollbar::-webkit-scrollbar-thumb:hover {
  background: linear-gradient(135deg, #a855f7, #00f6ff);
}

@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}

@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}

@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}

@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
  initial-value: rotateX(0);
}

@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
  initial-value: rotateY(0);
}

@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
  initial-value: rotateZ(0);
}

@property --tw-skew-x {
  syntax: "*";
  inherits: false;
  initial-value: skewX(0);
}

@property --tw-skew-y {
  syntax: "*";
  inherits: false;
  initial-value: skewY(0);
}

@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-space-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}

@property --tw-gradient-position {
  syntax: "*";
  inherits: false
}

@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}

@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}

@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}

@property --tw-gradient-stops {
  syntax: "*";
  inherits: false
}

@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false
}

@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}

@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}

@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}

@property --tw-leading {
  syntax: "*";
  inherits: false
}

@property --tw-font-weight {
  syntax: "*";
  inherits: false
}

@property --tw-tracking {
  syntax: "*";
  inherits: false
}

@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-shadow-color {
  syntax: "*";
  inherits: false
}

@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}

@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false
}

@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}

@property --tw-ring-color {
  syntax: "*";
  inherits: false
}

@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false
}

@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-ring-inset {
  syntax: "*";
  inherits: false
}

@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0;
}

@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}

@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}

@property --tw-blur {
  syntax: "*";
  inherits: false
}

@property --tw-brightness {
  syntax: "*";
  inherits: false
}

@property --tw-contrast {
  syntax: "*";
  inherits: false
}

@property --tw-grayscale {
  syntax: "*";
  inherits: false
}

@property --tw-hue-rotate {
  syntax: "*";
  inherits: false
}

@property --tw-invert {
  syntax: "*";
  inherits: false
}

@property --tw-opacity {
  syntax: "*";
  inherits: false
}

@property --tw-saturate {
  syntax: "*";
  inherits: false
}

@property --tw-sepia {
  syntax: "*";
  inherits: false
}

@property --tw-drop-shadow {
  syntax: "*";
  inherits: false
}

@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false
}

@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}

@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-blur {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-brightness {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-contrast {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-grayscale {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-hue-rotate {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-invert {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-opacity {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-saturate {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-sepia {
  syntax: "*";
  inherits: false
}

@property --tw-duration {
  syntax: "*";
  inherits: false
}

@keyframes bounce {
  0%, 100% {
    animation-timing-function: cubic-bezier(.8, 0, 1, 1);
    transform: translateY(-25%);
  }

  50% {
    animation-timing-function: cubic-bezier(0, 0, .2, 1);
    transform: none;
  }
}

@keyframes enter {
  from {
    opacity: var(--tw-enter-opacity, 1);
    transform: translate3d(var(--tw-enter-translate-x, 0), var(--tw-enter-translate-y, 0), 0) scale3d(var(--tw-enter-scale, 1), var(--tw-enter-scale, 1), var(--tw-enter-scale, 1)) rotate(var(--tw-enter-rotate, 0));
  }
}

@keyframes exit {
  to {
    opacity: var(--tw-exit-opacity, 1);
    transform: translate3d(var(--tw-exit-translate-x, 0), var(--tw-exit-translate-y, 0), 0) scale3d(var(--tw-exit-scale, 1), var(--tw-exit-scale, 1), var(--tw-exit-scale, 1)) rotate(var(--tw-exit-rotate, 0));
  }
}

/* Custom animations for Landing Page */
@keyframes marquee-vertical {
  from {
    transform: translateY(0);
  }
  to {
    transform: translateY(-100%);
  }
}

@keyframes fade-in-up {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.animate-marquee-vertical {
  animation: marquee-vertical var(--duration) linear infinite;
}

.animate-fade-in-up {
  animation: fade-in-up 0.6s ease-out forwards;
  opacity: 0;
}
